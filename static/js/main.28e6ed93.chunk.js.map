{"version":3,"sources":["components/dateFilter/DateFilter.tsx","state/makeData.ts","components/selecteModal/selectModal.tsx","components/filters/offers.tsx","components/filters/webmasters.tsx","components/filters/geo.tsx","components/filters/users.tsx","components/filters/monSup.tsx","components/filters/filters.tsx","components/tables/tables.tsx","layouts/main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Period","RangePicker","DatePicker","dateFormat","SpecificPeriodSelector","setPeriod","setGroup","setType","period","group","type","className","onClick","DateFilter","useState","status","setStatus","Week","moment","Date","date","setDate","wrapperRef","useRef","selectPeriod","nowDate","getDate","getFullYear","getMonth","handleClickOutside","event","useEffect","document","addEventListener","removeEventListener","value","format","renderExtraFooter","onChange","dates","dateStrings","console","log","open","onOpenChange","ref","Search","Input","SelectModal","visible","setVisible","onSelect","values","columns","data","title","hideSelectAll","tableData","filterTableData","search","map","el","key","selectedRowKeys","setSelectedRowKeys","searchStatus","setSearchStatus","searchStr","setSearchStr","rowSelection","columnWidth","onSelectAll","selected","selectedRows","record","searchTableItem","_","_d","filter","name","toLowerCase","indexOf","onOk","find","onCancel","placeholder","loading","e","target","dataSource","bordered","size","tableLayout","onRow","r","rowIndex","selectedRow","push","splice","geo","dataIndex","defaultSortOrder","sorter","a","b","width","ellipsis","align","i","total","valid","validP","unproc","appHour","unprocP","proc","drtApp","clnApp","workApp","planAvgCheck","ups","upsP","cross","crossP","rej","rejP","decl","declP","declDbl","declDblP","numOfConnected","connected","children","offers","webmasters","users","login","permitToLogin","roles","Option","Select","index","Offers","setValues","mode","allowClear","maxTagCount","listHeight","onDropdownVisibleChange","onClear","dropdownStyle","display","dropdownRender","child","Webmasters","Geo","setFilterState","defaultValue","setDefaultValue","_value","includes","defaultActiveFirstOption","label","render","permit","checked","disabled","Users","MonSup","Title","Typography","fields","show","component","props","hideLabel","FieldsSelect","filterFields","toggleFields","indx","Item","Filters","onLoad","setFilters","Form","useForm","form","filterState","changeFields","onFinish","setTimeout","layout","span","level","style","textAlign","overlay","arrow","trigger","count","length","EllipsisOutlined","margin","SaveOutlined","resetFields","UndoOutlined","htmlType","SyncOutlined","gutter","ResizableTitle","onResize","restProps","height","handle","stopPropagation","draggableOpts","enableUserSelectHack","Tables","state","components","header","cell","onSelectChange","setState","handleResize","nextColumns","this","filters","loadStatus","col","onHeaderCell","column","selections","Table","SELECTION_ALL","SELECTION_INVERT","SELECTION_NONE","spinning","scroll","y","x","pagination","React","Component","Header","Layout","Content","Footer","MainLayout","position","zIndex","padding","marginTop","minHeight","backgroundColor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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CV/F,UAAW,UACXgG,MAAO,QACPF,MAAO,IAET,CACElD,MAAO,OACP6C,UAAW,OACXM,UAAU,EACVC,MAAO,QACPF,MAAO,IAET,CACElD,MAAO,QACP6C,UAAW,QACXM,UAAU,EACVC,MAAO,QACPF,MAAO,IAET,CACElD,MAAO,SACP6C,UAAW,SACXM,UAAU,EACVC,MAAO,QACPF,MAAO,IAET,CACElD,MAAO,OACP6C,UAAW,MACXM,UAAU,EACV/F,UAAW,UACXgG,MAAO,QACPF,MAAO,IAET,CACElD,MAAO,OACP6C,UAAW,OACXM,UAAU,EACV/F,UAAW,UACXgG,MAAO,QACPF,MAAO,IAET,CACElD,MAAO,OACP6C,UAAW,OACXM,UAAU,EACV/F,UAAW,UACXgG,MAAO,QACPF,MAAO,IAET,CACElD,MAAO,QACP6C,UAAW,QACXM,UAAU,EACV/F,UAAW,UACXgG,MAAO,QACPF,MAAO,IAET,CACElD,MAAO,WACP6C,UAAW,UACXM,UAAU,EACVC,MAAO,QACPF,MAAO,IAET,CACElD,MAAO,YACP6C,UAAW,WACXM,UAAU,EACVC,MAAO,QACPF,MAAO,IAET,CACElD,MAAO,mBACP6C,UAAW,iBACXM,UAAU,EACVC,MAAO,QACPF,MAAO,KAET,CACElD,MAAO,YACP6C,UAAW,YACXM,UAAU,EACVC,MAAO,QACPF,MAAO,KAIHhD,EAAyB,GAEtBmD,EAAI,EAAGA,EAAI,EAAGA,IACvBnD,EAAUwC,KAAK,CACbnC,IAAK8C,EACLxF,KAAM+E,EAAIS,GACVC,MAAO,IACPC,MAAO,IACPC,OAAQ,MACRC,OAAQ,IACRC,QAAS,EACTC,QAAS,MACTC,KAAM,GACNC,OAAQ,MACRC,OAAQ,MACRC,QAAS,MACTC,aAAc,UACdC,IAAK,EACLC,KAAM,MACNC,MAAO,GACPC,OAAQ,MACRC,IAAK,GACLC,KAAM,MACNC,KAAM,GACNC,MAAO,MACPC,QAAS,IACTC,SAAU,MACVC,eAAgB,IAChBC,UAAW,MACXC,SAAU,CACN,CACItE,IAAK8C,EACLxF,KAAMF,IAAO,CAAC,KAAM,EAAG,KAAKkB,OAAO,cACn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","file":"static/js/main.28e6ed93.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { DatePicker, Button } from 'antd';\r\nimport moment, { Moment }  from \"moment\";\r\n\r\nimport './styles.css';\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst dateFormat: string = 'DD.MM.YYYY';\r\n\r\ninterface ISpecificPeriodSelector {\r\n  setPeriod: any;\r\n  setGroup: any;\r\n  setType: any;\r\n  period: string;\r\n  group: string;\r\n  type: string;\r\n}\r\n\r\nconst SpecificPeriodSelector = ({setPeriod, setGroup, setType, period, group, type} : ISpecificPeriodSelector): JSX.Element => {\r\n  return (\r\n    <>\r\n      <div>Period:</div>\r\n      <div className=\"wrapper-period-select\">\r\n        <Button onClick={() => setPeriod('today')} type={period === 'today' ? 'primary' : 'default'}>Today</Button>\r\n        <Button onClick={() => setPeriod('week')} type={period === 'week' ? 'primary' : 'default'}>Last Week</Button>\r\n        <Button onClick={() => setPeriod('month')} type={period === 'month' ? 'primary' : 'default'}>Last Month</Button>\r\n      </div>\r\n      \r\n      <div>Group: </div>\r\n      <div className=\"wrapper-period-select\">\r\n        <Button onClick={() => setGroup('day')} type={group === 'day' ? 'primary' : 'default'}>Day</Button>\r\n        <Button onClick={() => setGroup('weeks')} type={group === 'weeks' ? 'primary' : 'default'}>Week's</Button>\r\n        <Button onClick={() => setGroup('months')} type={group === 'months' ? 'primary' : 'default'}>Month's</Button>\r\n        <Button onClick={() => setGroup('total')} type={group === 'total' ? 'primary' : 'default'}>Total</Button>\r\n      </div>\r\n      \r\n      <div>Type: </div>\r\n      <div className=\"wrapper-period-select\">\r\n        <Button onClick={() => setType('approved')} type={type === 'approved' ? 'primary' : 'default'}>Approved</Button>\r\n        <Button onClick={() => setType('leads')} type={type === 'leads' ? 'primary' : 'default'}>Leads</Button>\r\n        <Button onClick={() => setType('sendToCS')} type={type === 'sendToCS' ? 'primary' : 'default'}>Send to CS</Button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nenum Period { \r\n  Today = \"today\", \r\n  Week = \"week\",\r\n  month = \"month\", \r\n};\r\n\r\nconst DateFilter = (): JSX.Element => {\r\n  const [status, setStatus] = useState<boolean>(false);\r\n  const [period, setPeriod] = useState<string>(Period.Week);\r\n  const [group, setGroup] = useState<string>('weeks');\r\n  const [type, setType] = useState<string>('total');\r\n  const [date, setDate] = useState<[Moment, Moment]>([moment(new Date(), dateFormat), moment(new Date(), dateFormat)]);\r\n\r\n  const wrapperRef = useRef<any>();\r\n\r\n  const onChange  = (dates: any, dateStrings: [string, string]): void  =>  {\r\n      console.log(dates, dateStrings);\r\n      setPeriod('');\r\n      setGroup('');\r\n  };\r\n\r\n  const handleToggle = (status:  boolean) => {\r\n    setStatus(status);\r\n  }\r\n\r\n  const selectPeriod= (period: string) => {\r\n    const nowDate: Date = new Date;\r\n\r\n    if ( period ===  'today') {\r\n      setDate([moment(nowDate, dateFormat), moment(nowDate, dateFormat)]);\r\n    }\r\n\r\n    if ( period ===  'week') {\r\n      setDate([moment(nowDate.getDate() - 7, dateFormat), moment(nowDate, dateFormat)]);\r\n    }\r\n\r\n    if ( period ===  'month') {\r\n      setDate([moment(new Date(nowDate.getFullYear(), nowDate.getMonth(), 1), dateFormat), moment(new Date(), dateFormat)]);\r\n    }\r\n\r\n    setPeriod(period);\r\n  }\r\n\r\n  const handleClickOutside = (event: any) => {\r\n    // if (wrapperRef.current && !wrapperRef?.current?.contains(event.target)) {\r\n    //   setStatus(false);\r\n    // }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClickOutside, true);\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside, true);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n      <RangePicker\r\n        value={date}\r\n        format={dateFormat}\r\n        renderExtraFooter={() => \r\n          <SpecificPeriodSelector \r\n            setPeriod={selectPeriod} \r\n            setGroup={setGroup} \r\n            setType={setType}\r\n            period={period} \r\n            group={group} \r\n            type={type}\r\n          />}\r\n        onChange={onChange}\r\n        open={status}\r\n        onOpenChange={handleToggle}\r\n        ref={wrapperRef}\r\n      />\r\n  )\r\n};\r\n\r\nexport { DateFilter };","import moment from 'moment';\r\n\r\nexport const geo: string[] = [\r\n  'AR', 'BG', 'CK', 'TR', 'MX', 'RO', 'PT', 'ID', 'GN'\r\n];\r\n\r\nexport interface TableData {\r\n  key: number;\r\n  date: string;\r\n  total: number;\r\n  valid: number;\r\n  validP: string;\r\n  unproc: number;\r\n  appHour: number;\r\n  unprocP: string;\r\n  proc: number;\r\n  drtApp: string;\r\n  clnApp: string;\r\n  workApp: string;\r\n  planAvgCheck: string;\r\n  ups: number;\r\n  upsP: string;\r\n  cross: number;\r\n  crossP: string;\r\n  rej: number;\r\n  rejP: string;\r\n  decl: number;\r\n  declP: string;\r\n  declDbl: number;\r\n  declDblP: string;\r\n  numOfConnected: number;\r\n  connected: string;\r\n  children?: TableData[];\r\n}\r\n\r\nexport const columns = [\r\n{\r\n  title: 'Date',\r\n  dataIndex: 'date',\r\n  defaultSortOrder: 'descend',\r\n  sorter: (a: any, b: any) => a.date - b.date,\r\n  width: 80,\r\n},\r\n{\r\n  title: 'Total',\r\n  dataIndex: 'total',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 40,\r\n},\r\n{\r\n  title: 'Valid',\r\n  dataIndex: 'valid',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 40,\r\n},\r\n{\r\n  title: 'Valid%',\r\n  dataIndex: 'validP',\r\n  ellipsis: true,\r\n  className: 'color_1',\r\n  align: 'right',\r\n  width: 55,\r\n},\r\n{\r\n  title: 'Unproc',\r\n  dataIndex: 'unproc',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 60,\r\n},\r\n{\r\n  title: 'App hour',\r\n  dataIndex: 'appHour',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 70,\r\n},\r\n{\r\n  title: 'Unproc%',\r\n  dataIndex: 'unprocP',\r\n  ellipsis: true,\r\n  className: 'color_1',\r\n  align: 'right',\r\n  width: 70,\r\n},\r\n{\r\n  title: 'Proc.',\r\n  dataIndex: 'proc',\r\n  ellipsis: true,\r\n  className: 'color_2',\r\n  align: 'right',\r\n  width: 45,\r\n},\r\n{\r\n  title: 'Drt. app.',\r\n  dataIndex: 'drtApp',\r\n  ellipsis: true,\r\n  className: 'color_2',\r\n  align: 'right',\r\n  width: 70,\r\n},\r\n{\r\n  title: 'Cln App',\r\n  dataIndex: 'clnApp',\r\n  ellipsis: true,\r\n  className: 'color_3',\r\n  align: 'right',\r\n  width: 60,\r\n},\r\n{\r\n  title: 'Work App.%',\r\n  dataIndex: 'workApp',\r\n  ellipsis: true,\r\n  className: 'color_1',\r\n  align: 'right',\r\n  width: 90,\r\n},\r\n{\r\n  title: 'Plan Avg. check',\r\n  dataIndex: 'planAvgCheck',\r\n  ellipsis: true,\r\n  className: 'text_bold',\r\n  align: 'right',\r\n  width: 115,\r\n},\r\n{\r\n  title: 'Ups',\r\n  dataIndex: 'ups',\r\n  ellipsis: true,\r\n  className: 'color_1',\r\n  align: 'right',\r\n  width: 40,\r\n},\r\n{\r\n  title: 'Ups%',\r\n  dataIndex: 'upsP',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 50,\r\n},\r\n{\r\n  title: 'Cross',\r\n  dataIndex: 'cross',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 50,\r\n},\r\n{\r\n  title: 'Cross%',\r\n  dataIndex: 'crossP',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 60,\r\n},\r\n{\r\n  title: 'Rej.',\r\n  dataIndex: 'rej',\r\n  ellipsis: true,\r\n  className: 'color_4',\r\n  align: 'right',\r\n  width: 38,\r\n},\r\n{\r\n  title: 'Rej%',\r\n  dataIndex: 'rejP',\r\n  ellipsis: true,\r\n  className: 'color_4',\r\n  align: 'right',\r\n  width: 45,\r\n},\r\n{\r\n  title: 'Decl',\r\n  dataIndex: 'decl',\r\n  ellipsis: true,\r\n  className: 'color_5',\r\n  align: 'right',\r\n  width: 40,\r\n},\r\n{\r\n  title: 'Decl%',\r\n  dataIndex: 'declP',\r\n  ellipsis: true,\r\n  className: 'color_5',\r\n  align: 'right',\r\n  width: 55,\r\n},\r\n{\r\n  title: 'Decl_dbl',\r\n  dataIndex: 'declDbl',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 70,\r\n},\r\n{\r\n  title: 'Decl_dbl%',\r\n  dataIndex: 'declDblP',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 80,\r\n},\r\n{\r\n  title: 'Num of connected',\r\n  dataIndex: 'numOfConnected',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 130,\r\n},\r\n{\r\n  title: 'Connected',\r\n  dataIndex: 'connected',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 85,\r\n},\r\n];\r\n\r\nconst tableData: TableData[] = [];\r\n\r\nfor (let i = 0; i < 9; i++) {\r\ntableData.push({\r\n  key: i,\r\n  date: geo[i],\r\n  total: 1000,\r\n  valid: 600,\r\n  validP: '50%',\r\n  unproc: 100,\r\n  appHour: 2,\r\n  unprocP: '10%',\r\n  proc: 76,\r\n  drtApp: '23%',\r\n  clnApp: '34%',\r\n  workApp: '16%',\r\n  planAvgCheck: '2323,45',\r\n  ups: 4,\r\n  upsP: '23%',\r\n  cross: 65,\r\n  crossP: '33%',\r\n  rej: 22,\r\n  rejP: '85%',\r\n  decl: 56,\r\n  declP: '12%',\r\n  declDbl: 322,\r\n  declDblP: '34%',\r\n  numOfConnected: 344,\r\n  connected: '23%',\r\n  children: [\r\n      {\r\n          key: i,\r\n          date: moment([2021, 6, 23]).format('DD.MM.YYYY'),\r\n          total: 600,\r\n          valid: 200,\r\n          validP: '30%',\r\n          unproc: 63,\r\n          appHour: 1,\r\n          unprocP: '10%',\r\n          proc: 46,\r\n          drtApp: '23%',\r\n          clnApp: '34%',\r\n          workApp: '16%',\r\n          planAvgCheck: '2323,45',\r\n          ups: 4,\r\n          upsP: '23%',\r\n          cross: 65,\r\n          crossP: '33%',\r\n          rej: 22,\r\n          rejP: '85%',\r\n          decl: 56,\r\n          declP: '12%',\r\n          declDbl: 322,\r\n          declDblP: '34%',\r\n          numOfConnected: 344,\r\n          connected: '23%',\r\n      },\r\n      {\r\n          key: i,\r\n          date: moment([2021, 6, 21]).format('DD.MM.YYYY'),\r\n          total: 400,\r\n          valid: 400,\r\n          validP: '20%',\r\n          unproc: 46,\r\n          appHour: 1,\r\n          unprocP: '10%',\r\n          proc: 30,\r\n          drtApp: '23%',\r\n          clnApp: '34%',\r\n          workApp: '16%',\r\n          planAvgCheck: '2323,45',\r\n          ups: 4,\r\n          upsP: '23%',\r\n          cross: 65,\r\n          crossP: '33%',\r\n          rej: 22,\r\n          rejP: '85%',\r\n          decl: 56,\r\n          declP: '12%',\r\n          declDbl: 322,\r\n          declDblP: '34%',\r\n          numOfConnected: 344,\r\n          connected: '23%',\r\n      }\r\n  ]\r\n});\r\n}\r\n\r\nexport { tableData };\r\n\r\nexport const offers: string[] = [\r\n  'BG 10Bar Watch',\r\n  'BG CBDol',\r\n  'BG Bracelet Starry Sky',\r\n  'BG Combidress',\r\n  'RO Starryy Sky Watch',\r\n  'RO XTactical Watch',\r\n  'BG 10Bard Watch',\r\n  'BG CBDolf',\r\n  'BG Braceletr Starry Sky',\r\n  'BG Combidressg',\r\n  'RO Starry Sky Watch',\r\n  'RO XTacticall Watch',\r\n  'BG 10Barv Watch',\r\n  'BG CBDol4',\r\n  'BG Bracelett Starry Sky',\r\n  'BG Combidresse',\r\n  'RO Starryd Sky Watch',\r\n  'RO XTacticaly Watch',\r\n  'BG 10Bars Watch',\r\n  'BG CBDol7',\r\n  'BG Braceleto Starry Sky',\r\n  'BG Combidressa',\r\n  'RO Starryd Sky Watch',\r\n  'RO XTacticalz Watch',\r\n  'BG 10Bar5 Watch',\r\n  'BG CBDolh',\r\n  'BG Braceletdf Starry Sky',\r\n  'BG Combidresss',\r\n  'RO Starrya Sky Watch',\r\n  'RO XTacticalx Watch',\r\n  'BG 10Barz Watch',\r\n  'BG CBDolk',\r\n  'BG Braceletf Starry Sky',\r\n  'BG Combidressm',\r\n  'RO Starryl Sky Watch',\r\n  'RO XTacticalp Watch',\r\n];\r\n\r\nexport const webmasters: string[] = [\r\n  '001',\r\n  '002',\r\n  '003',\r\n  '423423',\r\n  '234234',\r\n  '1001',\r\n  '22323',\r\n  '223',\r\n  '2323',\r\n  '34234',\r\n];\r\n\r\nconst users: any[] = [];\r\n\r\nfor (let i = 0; i < 100;i++) {\r\n  users.push({\r\n    key: i,\r\n    login: `test_${i}`,\r\n    name: `UserName_${i}`,\r\n    permitToLogin: i%3,\r\n    roles: 'Operator'\r\n  });\r\n}\r\n\r\nexport { users };\r\n","import { useState, useEffect } from 'react';\r\nimport { Input, Modal, Table, Divider } from 'antd';\r\nimport * as _ from 'lodash';\r\n\r\nconst { Search } = Input;\r\n\r\nexport const SelectModal = ({visible, setVisible, onSelect, values, columns, data, title, hideSelectAll = false}: \r\n  {visible: boolean, setVisible: any, onSelect: any, values: any[], columns: any[], data: any[], title: string, hideSelectAll?: boolean}): JSX.Element => {\r\n\r\n  const [tableData, filterTableData] = useState(data);\r\n  const [search, setSearch] = useState(false);\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState(values.map(el => el.key));\r\n\r\n  useEffect(() => {\r\n    setSelectedRowKeys(values.map(el => el.key));\r\n  },[values]);\r\n\r\n  const [searchStatus, setSearchStatus] = useState(false);\r\n  const [searchStr, setSearchStr] = useState('');\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setSearchStr('');\r\n    }\r\n  },[]);\r\n\r\n  const rowSelection = {\r\n    columnWidth: 1,\r\n    hideSelectAll,\r\n    selectedRowKeys,\r\n    onSelectAll: (selected: boolean, selectedRows: any[]) => {\r\n      setSelectedRowKeys(selected ? searchStatus ? selectedRows.map(el => el.key) : data.map(el => el.key) : []);\r\n    },\r\n    onSelect: (record: any, selected: boolean, selectedRows: any[]) => {\r\n      setSelectedRowKeys(selectedRows.map(el => typeof el ===  'object' ?  el.key : el));\r\n    }\r\n  };\r\n\r\n  const onSelectData = () => {\r\n    onSelect(selectedRowKeys.map(key => data.find(el => el.key === key)));\r\n    setVisible(false);\r\n  }\r\n\r\n  const onSearch = (e: any) => {\r\n    setSearchStr(e.target.value);\r\n    searchTableItem(e.target.value);\r\n  }\r\n\r\n  const searchTableItem = _.debounce((value: string) => {\r\n    let _d = [];\r\n    if (value) {\r\n      setSearchStatus(true);\r\n      _d = data.filter( el => el.name.toLowerCase().indexOf(value) !== -1);\r\n    } else {\r\n      setSearchStatus(false);\r\n      _d = data;\r\n    }\r\n\r\n    filterTableData(_d);\r\n  },500)\r\n\r\n  const selectedRow = (rowIndex: number | undefined) => {\r\n    const selectedRow = hideSelectAll ?  [] : selectedRowKeys;\r\n    if (selectedRow?.indexOf(rowIndex) === -1) {\r\n      selectedRow.push(rowIndex)\r\n    } else {\r\n      selectedRow.splice(selectedRow.indexOf(rowIndex), 1);\r\n    }\r\n    rowSelection.onSelect(null, true, selectedRow);\r\n  }\r\n\r\n  return(\r\n    <Modal\r\n          title={title}\r\n          visible={visible}\r\n          onOk={() => onSelectData()}\r\n          onCancel={() => setVisible(false)}\r\n        >\r\n          <Search\r\n            placeholder=\"Text to search\" \r\n            loading={search}\r\n            onChange={onSearch}\r\n            value={searchStr}\r\n          />\r\n          <Divider />\r\n          <Table\r\n            rowSelection={rowSelection}\r\n            columns={columns}\r\n            dataSource={tableData}\r\n            bordered size=\"small\" \r\n            tableLayout='auto'\r\n            onRow={(r, rowIndex) => {\r\n              return {\r\n                onClick: () => { selectedRow(rowIndex) },\r\n              };\r\n            }}\r\n          />\r\n          \r\n        </Modal>\r\n  )\r\n}\r\n","import { useState } from 'react';\r\nimport { Select } from 'antd';\r\n\r\nimport { SelectModal } from '../selecteModal';\r\nimport { offers } from '../../state/makeData';\r\n\r\nconst { Option }: any = Select;\r\n\r\ninterface IOfferColumns {\r\n    title: string;\r\n    dataIndex: string;\r\n  }\r\n  \r\n  const columns: Array<IOfferColumns> = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n    },\r\n  ]\r\n  \r\n  type OfferData = {\r\n    key: number;\r\n    name: string;\r\n  }\r\n  \r\n  const data: OfferData[] = offers.map((el, index) => (\r\n      {\r\n        key: index,\r\n        name: el,\r\n      }\r\n    )\r\n  );\r\n  \r\n  // выбор оффера\r\n  export const Offers = (): JSX.Element => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [values, setValues] = useState([]);\r\n  \r\n    const onSelect = (value: []) => {\r\n      setValues(value);\r\n    }\r\n  \r\n    const onOpen = () => {\r\n      setVisible(true);\r\n    }\r\n  \r\n    const onClear = () => {\r\n      setValues([]);\r\n    }\r\n  \r\n    return (\r\n      <Select\r\n        mode=\"multiple\"\r\n        allowClear\r\n        placeholder=\"Please select\"\r\n        maxTagCount=\"responsive\"\r\n        listHeight={0}\r\n        onDropdownVisibleChange={onOpen}\r\n        value={values.map((el:OfferData) => el.name)}\r\n        onClear={onClear}\r\n        dropdownStyle={{display: 'none'}}      \r\n        dropdownRender={child => {\r\n          return(\r\n            <SelectModal \r\n              title=\"Offer\"\r\n              visible={visible} \r\n              setVisible={setVisible} \r\n              onSelect={onSelect} \r\n              values={values}  \r\n              columns={columns} \r\n              data={data}\r\n            />\r\n          )\r\n        }}\r\n      >\r\n      {offers.map( el => <Option key={el}>{el}</Option>)}\r\n    </Select>\r\n    )\r\n  }","import { useState } from 'react';\r\nimport { Select } from 'antd';\r\n\r\nimport { SelectModal } from '../selecteModal';\r\nimport { webmasters } from '../../state/makeData';\r\n\r\nconst { Option }: any = Select;\r\n\r\ninterface IColumns {\r\n    title: string;\r\n    dataIndex: string;\r\n  }\r\n  \r\n  const columns: Array<IColumns> = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n    },\r\n  ]\r\n  \r\n  type WebmasterData = {\r\n    key: number;\r\n    name: string;\r\n  }\r\n  \r\n  const data: WebmasterData[] = webmasters.map((el, index) => (\r\n      {\r\n        key: index,\r\n        name: el,\r\n      }\r\n    )\r\n  );\r\n\r\nexport const Webmasters = (): JSX.Element => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [values, setValues] = useState([]);\r\n  \r\n    const onSelect = (value: []) => {\r\n      setValues(value);\r\n    }\r\n  \r\n    const onOpen = () => {\r\n      setVisible(true);\r\n    }\r\n  \r\n    const onClear = () => {\r\n      setValues([]);\r\n    }\r\n  \r\n    return (\r\n      <Select\r\n        mode=\"multiple\"\r\n        allowClear\r\n        placeholder=\"Please select\"\r\n        maxTagCount=\"responsive\"\r\n        listHeight={0}\r\n        onDropdownVisibleChange={onOpen}\r\n        value={values.map((el:WebmasterData) => el.name)}\r\n        onClear={onClear}\r\n        dropdownStyle={{display: 'none'}}\r\n        dropdownRender={child => {\r\n          return(\r\n            <SelectModal \r\n              title=\"Webmasters\"\r\n              visible={visible} \r\n              setVisible={setVisible} \r\n              onSelect={onSelect} \r\n              values={values}\r\n              columns={columns} \r\n              data={data}\r\n            />\r\n          )\r\n        }}\r\n      >\r\n      {webmasters.map( el => <Option key={el}>{el}</Option>)}\r\n    </Select>\r\n    )\r\n  }","import { useState } from 'react';\r\nimport { Select } from 'antd';\r\n\r\nimport { geo } from '../../state/makeData';\r\n\r\nconst { Option }: any = Select;\r\n\r\nexport const Geo = ({setFilterState} : {setFilterState: any}) => {\r\n    const [defaultValue, setDefaultValue] = useState([]);\r\n  \r\n    const onSelect = (value: string[] ) => {\r\n      const _value: any = value.includes('all') ? geo : value;\r\n  \r\n      setDefaultValue(_value);\r\n      setFilterState({geo: _value})\r\n    }\r\n  \r\n    return (<Select\r\n        mode=\"multiple\"\r\n        allowClear\r\n        placeholder=\"Please select\"\r\n        maxTagCount=\"responsive\"\r\n        onChange={onSelect}\r\n        listHeight={500}\r\n        defaultActiveFirstOption={false}\r\n        value={defaultValue}\r\n      >\r\n        <Option value=\"all\" label=\"All\" className=\"select_all\">\r\n            All\r\n        </Option>\r\n        {geo.map( el => <Option key={el}>{el}</Option>)}\r\n      </Select>\r\n    )\r\n  }","import { useState } from 'react';\r\nimport { Select, Checkbox } from 'antd';\r\n\r\nimport { SelectModal } from '../selecteModal';\r\nimport { users } from '../../state/makeData';\r\n\r\nconst { Option }: any = Select;\r\n\r\ninterface IColumns {\r\n    title: string;\r\n    dataIndex: string;\r\n    render?: (props: any) => JSX.Element;\r\n    align?: string;\r\n  }\r\n  \r\n  const columns: Array<IColumns> = [\r\n    {\r\n      title: 'Login',\r\n      dataIndex: 'login',\r\n    },\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n    },\r\n    {\r\n      title: 'Permit to login in?',\r\n      dataIndex: 'permitToLogin',\r\n      align: 'center',\r\n      render: permit => <Checkbox  checked={permit} disabled={true}/>\r\n    },\r\n    {\r\n      title: 'Roles',\r\n      dataIndex: 'roles',\r\n    },\r\n  ]\r\n  \r\n  type UsersData = {\r\n    key: number;\r\n    name: string;\r\n    login: string;\r\n    permitToLogin: boolean;\r\n    roles: string;\r\n  }\r\n\r\n\r\nexport const Users = (): JSX.Element => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [values, setValues] = useState([]);\r\n  \r\n    const onSelect = (value: []) => {\r\n      setValues(value);\r\n    }\r\n  \r\n    const onOpen = () => {\r\n      setVisible(true);\r\n    }\r\n  \r\n    const onClear = () => {\r\n      setValues([]);\r\n    }\r\n  \r\n    return (\r\n      <Select\r\n        mode=\"multiple\"\r\n        allowClear\r\n        placeholder=\"Please select\"\r\n        maxTagCount=\"responsive\"\r\n        listHeight={0}\r\n        onDropdownVisibleChange={onOpen}\r\n        value={values.map((el:UsersData) => el.login)}\r\n        onClear={onClear}\r\n        dropdownStyle={{display: 'none'}}\r\n        dropdownRender={child => {\r\n          return(\r\n            <SelectModal \r\n              title=\"Users\"\r\n              visible={visible} \r\n              setVisible={setVisible} \r\n              onSelect={onSelect} \r\n              values={values}\r\n              columns={columns} \r\n              data={users}\r\n            />\r\n          )\r\n        }}\r\n      >\r\n      {users.map( el => <Option key={el.login}>{el.login}</Option>)}\r\n    </Select>\r\n    )\r\n  }","import { useState } from 'react';\r\nimport { Select, Checkbox } from 'antd';\r\n\r\nimport { SelectModal } from '../selecteModal';\r\nimport { users } from '../../state/makeData';\r\n\r\nconst { Option }: any = Select;\r\n\r\ninterface IColumns {\r\n    title: string;\r\n    dataIndex: string;\r\n    render?: (props: any) => JSX.Element;\r\n    align?: string;\r\n  }\r\n  \r\n  const columns: Array<IColumns> = [\r\n    {\r\n      title: 'Login',\r\n      dataIndex: 'login',\r\n    },\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n    },\r\n    {\r\n      title: 'Permit to login in?',\r\n      dataIndex: 'permitToLogin',\r\n      align: 'center',\r\n      render: permit => <Checkbox  checked={permit} disabled={true}/>\r\n    },\r\n    {\r\n      title: 'Roles',\r\n      dataIndex: 'roles',\r\n    },\r\n  ]\r\n  \r\n  type UsersData = {\r\n    key: number;\r\n    name: string;\r\n    login: string;\r\n    permitToLogin: boolean;\r\n    roles: string;\r\n  }\r\n\r\n\r\nexport const MonSup = (): JSX.Element => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [values, setValues] = useState([]);\r\n  \r\n    const onSelect = (value: []) => {\r\n      setValues(value);\r\n    }\r\n  \r\n    const onOpen = () => {\r\n      setVisible(true);\r\n    }\r\n  \r\n    const onClear = () => {\r\n      setValues([]);\r\n    }\r\n  \r\n    return (\r\n      <Select\r\n        mode=\"multiple\"\r\n        allowClear\r\n        placeholder=\"\"\r\n        maxTagCount=\"responsive\"\r\n        listHeight={0}\r\n        onDropdownVisibleChange={onOpen}\r\n        value={values.map((el:UsersData) => el.login)}\r\n        onClear={onClear}\r\n        dropdownStyle={{display: 'none'}}\r\n        dropdownRender={child => {\r\n          return(\r\n            <SelectModal \r\n              title=\"Users\"\r\n              visible={visible} \r\n              setVisible={setVisible} \r\n              onSelect={onSelect} \r\n              values={values}\r\n              columns={columns} \r\n              data={users}\r\n              hideSelectAll={true}\r\n            />\r\n          )\r\n        }}\r\n      >\r\n      {users.map( el => <Option key={el.login}>{el.login}</Option>)}\r\n    </Select>\r\n    )\r\n  }","import { useState } from 'react';\r\nimport { Form, Row, Col, Button, Select, Dropdown, Menu, Checkbox, Badge, Typography, Tooltip } from 'antd';\r\nimport { EllipsisOutlined, SyncOutlined, UndoOutlined, SaveOutlined } from '@ant-design/icons';\r\n\r\nimport { DateFilter } from '../dateFilter';\r\nimport { Offers } from  './offers';\r\nimport { Webmasters } from './webmasters';\r\nimport { Geo } from './geo';\r\nimport { Users } from './users';\r\nimport { MonSup } from './monSup';\r\n\r\nimport './styles.css';\r\n\r\nconst { Option }: any = Select;\r\nconst { Title }: any = Typography;\r\n\r\n// выбор фильтров\r\ntype Field = {\r\n  name: string;\r\n  label: string;\r\n  show: boolean;\r\n  hideLabel?: boolean;\r\n  component: (...props: any) => JSX.Element;\r\n}\r\n\r\nconst fields: Field[] = [\r\n  {\r\n    name: 'date',\r\n    label: 'Date',\r\n    show: true,\r\n    component: () => <DateFilter />,\r\n  },\r\n  {\r\n    name: 'geo',\r\n    label: 'Geo',\r\n    show: true,\r\n    component: props => <Geo {...props}/>,\r\n  },\r\n  {\r\n    name: 'offer',\r\n    label: 'Offer',\r\n    show: true,\r\n    component: () => <Offers />,\r\n  },\r\n  {\r\n    name: 'productSubType',\r\n    label: 'Product sub type',\r\n    show: true,\r\n    component: () => (\r\n      <Select defaultValue=\"N/A\">\r\n        <Option value=\"N/A\">N/A</Option>\r\n        <Option value=\"Physics\">Physics</Option>\r\n        <Option value=\"Internal\">Internal</Option>\r\n      </Select>\r\n    ),\r\n  },\r\n  {\r\n    name: 'currencyType',\r\n    label: 'Currency type',\r\n    show: true,\r\n    component: () => (\r\n      <Select defaultValue=\"Local Currency\">\r\n        <Option value=\"localCurrency\">Local Currency</Option>\r\n        <Option value=\"euro\">Euro</Option>\r\n      </Select>\r\n    ),\r\n  },\r\n  {\r\n    name: 'leadType',\r\n    label: 'Lead type',\r\n    show: false,\r\n    component: () => (\r\n      <Select defaultValue=\"ALL\">\r\n        <Option value=\"all\">ALL</Option>\r\n        <Option value=\"common\">Common</Option>\r\n        <Option value=\"conviction\">Conviction</Option>\r\n        <Option value=\"ltv\">LTV</Option>\r\n      </Select>\r\n    ),\r\n  },\r\n  {\r\n    name: 'office',\r\n    label: 'Office',\r\n    show: false,\r\n    component: () => (\r\n      <Select defaultValue=\"N/A\">\r\n        <Option value=\"\">N/A</Option>\r\n        <Option value=\"bogota\">Bogota</Option>\r\n        <Option value=\"moscow\">Moscow</Option>\r\n      </Select>\r\n    ),\r\n  },\r\n  {\r\n    name: 'officeType',\r\n    label: 'Office type',\r\n    show: false,\r\n    component: () => (\r\n      <Select defaultValue=\"By Lead\">\r\n          <Option value=\"lead\">By Lead</Option>\r\n          <Option value=\"operator\">By Operator</Option>\r\n        </Select>\r\n    ),\r\n  },\r\n  {\r\n    name: 'webmaster',\r\n    label: 'Webmaster',\r\n    show: true,\r\n    component: () => (\r\n      <Webmasters />\r\n    ),\r\n  },\r\n  {\r\n    name: 'webmasterType',\r\n    label: 'Webmaster Type',\r\n    show: false,\r\n    component: () => (\r\n      <Select defaultValue=\"All\">\r\n        <Option value=\"External\">External</Option>\r\n        <Option value=\"Buyer\">Buyer</Option>\r\n        <Option value=\"All\">All</Option>\r\n    </Select>\r\n    ),\r\n  },\r\n  {\r\n    name: 'MonSup',\r\n    label: 'MON, SUP, S.OP:',\r\n    show: true,\r\n    component: () => (\r\n      <MonSup/>\r\n    ),\r\n  },\r\n  {\r\n    name: 'UserName',\r\n    label: 'User Name',\r\n    show: true,\r\n    component: () => (\r\n      <Users />\r\n    ),\r\n  },\r\n  {\r\n    name: 'TimeZone',\r\n    label: 'Time zone',\r\n    show: false,\r\n    component: () => (\r\n      <Select defaultValue=\"Moscow time\">\r\n          <Option value=\"moscow\">Moscow time</Option>\r\n          <Option value=\"geo\">Geo time</Option>\r\n        </Select>\r\n    ),\r\n  },\r\n  {\r\n    name: 'locationBonus',\r\n    label: 'Location Bonus',\r\n    show: true,\r\n    hideLabel: true,\r\n    component: () => (\r\n      <Checkbox>Location Bonus</Checkbox>\r\n    ),\r\n  },\r\n  {\r\n    name: 'withoutDeclinedDouble ',\r\n    label: 'Without Declined Double',\r\n    show: true,\r\n    hideLabel: true,\r\n    component: () => (\r\n      <Checkbox>Without Declined Double</Checkbox>\r\n    ),\r\n  },\r\n  {\r\n    name: 'traffic',\r\n    label: 'Traffic',\r\n    show: false,\r\n    component: () => (\r\n      <Select defaultValue=\"All\">\r\n          <Option value=\"regular\">Regular</Option>\r\n          <Option value=\"test\">Test</Option>\r\n          <Option value=\"all\">All</Option>\r\n        </Select>\r\n    ),\r\n  },\r\n]\r\n\r\nconst FieldsSelect = ({filterFields, toggleFields}: {filterFields: Field[], toggleFields: (status: boolean, indx: number) => void}) => {\r\n  return(\r\n  \r\n    <Menu>\r\n      {filterFields.map( (el, indx) => (\r\n        <Menu.Item>\r\n        <Checkbox onChange={e => toggleFields(e.target.checked, indx)} checked={el.show}>{el.label}</Checkbox>\r\n      </Menu.Item>\r\n      ))}\r\n    </Menu>\r\n)};\r\n\r\nexport const Filters = ({onLoad, setFilters}: {onLoad: any, setFilters: any}) => {\r\n  const [form] = Form.useForm();\r\n  const [filterState, setFilterState] = useState({});\r\n  const [filterFields, changeFields] = useState(fields);\r\n\r\n\r\n  const toggleFields = (status: boolean, indx: number) => {\r\n    changeFields(filterFields.map((el, i) => {\r\n      if (i === indx) el.show = status;\r\n      return el;\r\n    }))\r\n  }\r\n\r\n  const onFinish = () => {\r\n    onLoad(true);\r\n    setTimeout(() => {\r\n      setFilters(filterState);\r\n      onLoad(false);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      name=\"advanced_search\"\r\n      className=\"ant-advanced-search-form\"\r\n      onFinish={onFinish}\r\n      layout=\"vertical\"\r\n    >\r\n      <Row>\r\n        <Col span={6}>\r\n          <Title level={4}>Geo Statistics</Title>\r\n        </Col>\r\n        <Col span={18} style={{ textAlign: 'right' }}>\r\n          <Dropdown overlay={() => <FieldsSelect toggleFields={toggleFields} filterFields={filterFields}/>} arrow={true} trigger={['click']}>\r\n            <Badge count={filterFields.filter(el=>!el.show).length}>\r\n              <Tooltip title=\"Select filters\"> \r\n                <Button>\r\n                  <EllipsisOutlined />\r\n                </Button>\r\n              </Tooltip>\r\n            </Badge>\r\n          </Dropdown>\r\n          <Tooltip title=\"Save settings\"> \r\n            <Button\r\n              style={{ margin: '0 8px 0 10px' }}\r\n            >\r\n              <SaveOutlined />\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip title=\"Reset view settings\">\r\n            <Button\r\n              style={{ margin: '0 8px 0 0' }}\r\n              onClick={() => {\r\n                form.resetFields();\r\n              }}\r\n            >\r\n              <UndoOutlined />\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip title=\"Execute  query\">\r\n            <Button htmlType=\"submit\">\r\n              <SyncOutlined />\r\n            </Button>\r\n          </Tooltip>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={16}>\r\n        {filterFields.map(el => (\r\n          el.show && \r\n          <Col span={4} >\r\n            <Form.Item\r\n              name={el.name}\r\n              label={el.hideLabel ? ' ' : el.label}\r\n            >\r\n              {el.component({setFilterState})}\r\n            </Form.Item>\r\n        </Col>\r\n        ))}\r\n      </Row>\r\n    </Form>\r\n  );\r\n}; ","import React from 'react';\r\nimport { Table, Spin } from 'antd';\r\nimport { Resizable } from 'react-resizable';\r\nimport { tableData, columns, TableData} from '../../state/makeData';\r\n\r\nimport './styles.css';\r\n\r\nconst ResizableTitle = (props: any) => {\r\n    const { onResize, width, ...restProps } = props;\r\n  \r\n    if (!width) {\r\n      return <th {...restProps} />;\r\n    }\r\n  \r\n    return (\r\n      <Resizable\r\n        width={width}\r\n        height={0}\r\n        handle={\r\n          <span\r\n            className=\"react-resizable-handle\"\r\n            onClick={e => {\r\n              e.stopPropagation();\r\n            }}\r\n          />\r\n        }\r\n        onResize={onResize}\r\n        draggableOpts={{ enableUserSelectHack: false }}\r\n      >\r\n        <th {...restProps} />\r\n      </Resizable>\r\n    );\r\n  };\r\n  \r\nexport class Tables extends React.Component<ITableProps, ITableState> {\r\n  state = {\r\n    selectedRowKeys: [],\r\n    columns: columns,\r\n    width: 1600,\r\n  };\r\n\r\n  components = {\r\n    header: {\r\n      cell: ResizableTitle,\r\n    },\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys: any[]) => {\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n\r\n  handleResize = (index: number) => (e: Event, { size } : {size: any}) => {\r\n    this.setState(({ columns }) => {\r\n      const nextColumns: any[] = [...columns];\r\n      nextColumns[index] = {\r\n        ...nextColumns[index],\r\n        width: size.width,\r\n      };\r\n      return { columns: nextColumns };\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    const { filters, loadStatus} = this.props;\r\n\r\n    let width: number = 70;\r\n\r\n    const columns: any[] = this.state.columns.map((col: any, index: number) => {\r\n        width = width + col.width;\r\n        return ({\r\n            ...col,\r\n            onHeaderCell: (column: any) => ({\r\n            width: column.width,\r\n            onResize: this.handleResize(index),\r\n            }),\r\n      })\r\n    });\r\n\r\n\r\n    const { selectedRowKeys } = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n      selections: [\r\n        Table.SELECTION_ALL,\r\n        Table.SELECTION_INVERT,\r\n        Table.SELECTION_NONE,\r\n      ],\r\n    };\r\n\r\n    const data: TableData[]= tableData.filter( (el: TableData) => {\r\n        if (filters?.geo?.length) {\r\n            return filters?.geo.includes(el.date);\r\n        } else {\r\n            return true;\r\n        }\r\n    });\r\n\r\n    return (        \r\n            <Spin size=\"large\" spinning={loadStatus}>\r\n                <Table components={this.components} rowSelection={rowSelection} columns={columns} dataSource={data} scroll={{ y: 800, x: width }} pagination={false} bordered size=\"small\" tableLayout='auto'/>\r\n            </Spin>\r\n    )\r\n  }\r\n}\r\n\r\ninterface ITableProps {\r\n  loadStatus: boolean;\r\n  filters: any; // статус фильтров пока не описан полностью \r\n}\r\n\r\ninterface ITableState {\r\n  selectedRowKeys: any[]; \r\n  columns: any[]; // данные о колонках не описаны\r\n  width: number;\r\n}","import React, { useState, FC } from 'react';\r\nimport { Layout } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport { Filters } from '../components/filters';\r\nimport { Tables } from '../components/tables';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nexport const MainLayout: FC = () => {\r\n  const [loadStatus, onLoad] = useState(false);\r\n  const [filters, setFilters] = useState({});\r\n\r\n  return (\r\n    <Layout>\r\n    <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\r\n      <div className=\"logo\" />\r\n    </Header>\r\n    <Content className=\"site-layout\" style={{ padding: '0 50px', marginTop: 64 }}>\r\n      <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 380, backgroundColor: '#fff'}}>\r\n        <Filters onLoad={onLoad} setFilters={setFilters}/>\r\n        <br />\r\n        <Tables loadStatus={loadStatus} filters={filters}/>\r\n      </div>\r\n    </Content>\r\n    <Footer style={{ textAlign: 'center' }}>Absolut</Footer>\r\n  </Layout>\r\n  );\r\n}\r\n","import { MainLayout } from './layouts/index';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst App = () => (\r\n  <MainLayout/>\r\n)\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}