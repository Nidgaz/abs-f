{"version":3,"sources":["state/makeData.ts","components/filters/filters.tsx","components/tables/tables.tsx","layouts/main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["geo","columns","title","dataIndex","defaultSortOrder","sorter","a","b","date","width","ellipsis","align","className","tableData","i","push","key","total","valid","validP","unproc","appHour","unprocP","proc","drtApp","clnApp","workApp","planAvgCheck","ups","upsP","cross","crossP","rej","rejP","decl","declP","declDbl","declDblP","numOfConnected","connected","children","moment","format","offers","Option","Select","Title","Typography","fields","name","label","show","component","props","defaultValue","value","allowClear","FieldsSelect","filterFields","toggleFields","map","el","indx","Item","onChange","e","target","checked","Filters","onLoad","setFilters","Form","useForm","form","useState","filterState","setFilterState","changeFields","status","onFinish","setTimeout","layout","span","level","style","textAlign","overlay","arrow","count","filter","length","DownOutlined","margin","SaveOutlined","onClick","resetFields","UndoOutlined","htmlType","SyncOutlined","gutter","Geo","setDefaultValue","mode","placeholder","maxTagCount","_value","includes","listHeight","defaultActiveFirstOption","Offers","visible","setVisible","values","setValues","onSelect","onDropdownVisibleChange","onClear","dropdownStyle","display","dropdownRender","child","Search","Input","data","index","SelectModal","filterTableData","search","selectedRowKeys","setSelectedRowKeys","useEffect","searchStatus","setSearchStatus","rowSelection","onSelectAll","selected","selectedRows","record","onSearch","_","searchTableItem","_d","toLowerCase","indexOf","onOk","find","onCancel","loading","dataSource","bordered","size","tableLayout","RangePicker","DatePicker","dateFormat","DateFilter","ResizableTitle","onResize","restProps","height","handle","stopPropagation","draggableOpts","enableUserSelectHack","Tables","state","components","header","cell","onSelectChange","setState","handleResize","nextColumns","this","filters","loadStatus","col","onHeaderCell","column","selections","Table","SELECTION_ALL","SELECTION_INVERT","SELECTION_NONE","spinning","scroll","y","x","pagination","React","Component","Header","Layout","Content","Footer","MainLayout","position","zIndex","padding","marginTop","minHeight","backgroundColor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abd59342.chunk.js","sourcesContent":["import moment from 'moment';\r\n\r\nexport const geo: string[] = [\r\n  'AR', 'BG', 'CK', 'TR', 'MX', 'RO', 'PT', 'ID', 'GN'\r\n];\r\n\r\nexport interface TableData {\r\n  key: number;\r\n  date: string;\r\n  total: number;\r\n  valid: number;\r\n  validP: string;\r\n  unproc: number;\r\n  appHour: number;\r\n  unprocP: string;\r\n  proc: number;\r\n  drtApp: string;\r\n  clnApp: string;\r\n  workApp: string;\r\n  planAvgCheck: string;\r\n  ups: number;\r\n  upsP: string;\r\n  cross: number;\r\n  crossP: string;\r\n  rej: number;\r\n  rejP: string;\r\n  decl: number;\r\n  declP: string;\r\n  declDbl: number;\r\n  declDblP: string;\r\n  numOfConnected: number;\r\n  connected: string;\r\n  children?: TableData[];\r\n}\r\n\r\nexport const columns = [\r\n{\r\n  title: 'Date',\r\n  dataIndex: 'date',\r\n  defaultSortOrder: 'descend',\r\n  sorter: (a: any, b: any) => a.date - b.date,\r\n  width: 80,\r\n},\r\n{\r\n  title: 'Total',\r\n  dataIndex: 'total',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 40,\r\n},\r\n{\r\n  title: 'Valid',\r\n  dataIndex: 'valid',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 40,\r\n},\r\n{\r\n  title: 'Valid%',\r\n  dataIndex: 'validP',\r\n  ellipsis: true,\r\n  className: 'color_1',\r\n  align: 'right',\r\n  width: 55,\r\n},\r\n{\r\n  title: 'Unproc',\r\n  dataIndex: 'unproc',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 60,\r\n},\r\n{\r\n  title: 'App hour',\r\n  dataIndex: 'appHour',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 70,\r\n},\r\n{\r\n  title: 'Unproc%',\r\n  dataIndex: 'unprocP',\r\n  ellipsis: true,\r\n  className: 'color_1',\r\n  align: 'right',\r\n  width: 70,\r\n},\r\n{\r\n  title: 'Proc.',\r\n  dataIndex: 'proc',\r\n  ellipsis: true,\r\n  className: 'color_2',\r\n  align: 'right',\r\n  width: 45,\r\n},\r\n{\r\n  title: 'Drt. app.',\r\n  dataIndex: 'drtApp',\r\n  ellipsis: true,\r\n  className: 'color_2',\r\n  align: 'right',\r\n  width: 70,\r\n},\r\n{\r\n  title: 'Cln App',\r\n  dataIndex: 'clnApp',\r\n  ellipsis: true,\r\n  className: 'color_3',\r\n  align: 'right',\r\n  width: 60,\r\n},\r\n{\r\n  title: 'Work App.%',\r\n  dataIndex: 'workApp',\r\n  ellipsis: true,\r\n  className: 'color_1',\r\n  align: 'right',\r\n  width: 90,\r\n},\r\n{\r\n  title: 'Plan Avg. check',\r\n  dataIndex: 'planAvgCheck',\r\n  ellipsis: true,\r\n  className: 'text_bold',\r\n  align: 'right',\r\n  width: 115,\r\n},\r\n{\r\n  title: 'Ups',\r\n  dataIndex: 'ups',\r\n  ellipsis: true,\r\n  className: 'color_1',\r\n  align: 'right',\r\n  width: 40,\r\n},\r\n{\r\n  title: 'Ups%',\r\n  dataIndex: 'upsP',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 50,\r\n},\r\n{\r\n  title: 'Cross',\r\n  dataIndex: 'cross',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 50,\r\n},\r\n{\r\n  title: 'Cross%',\r\n  dataIndex: 'crossP',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 60,\r\n},\r\n{\r\n  title: 'Rej.',\r\n  dataIndex: 'rej',\r\n  ellipsis: true,\r\n  className: 'color_4',\r\n  align: 'right',\r\n  width: 38,\r\n},\r\n{\r\n  title: 'Rej%',\r\n  dataIndex: 'rejP',\r\n  ellipsis: true,\r\n  className: 'color_4',\r\n  align: 'right',\r\n  width: 45,\r\n},\r\n{\r\n  title: 'Decl',\r\n  dataIndex: 'decl',\r\n  ellipsis: true,\r\n  className: 'color_5',\r\n  align: 'right',\r\n  width: 40,\r\n},\r\n{\r\n  title: 'Decl%',\r\n  dataIndex: 'declP',\r\n  ellipsis: true,\r\n  className: 'color_5',\r\n  align: 'right',\r\n  width: 55,\r\n},\r\n{\r\n  title: 'Decl_dbl',\r\n  dataIndex: 'declDbl',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 70,\r\n},\r\n{\r\n  title: 'Decl_dbl%',\r\n  dataIndex: 'declDblP',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 80,\r\n},\r\n{\r\n  title: 'Num of connected',\r\n  dataIndex: 'numOfConnected',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 130,\r\n},\r\n{\r\n  title: 'Connected',\r\n  dataIndex: 'connected',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 85,\r\n},\r\n];\r\n\r\nconst tableData: TableData[] = [];\r\n\r\nfor (let i = 0; i < 9; i++) {\r\ntableData.push({\r\n  key: i,\r\n  date: geo[i],\r\n  total: 1000,\r\n  valid: 600,\r\n  validP: '50%',\r\n  unproc: 100,\r\n  appHour: 2,\r\n  unprocP: '10%',\r\n  proc: 76,\r\n  drtApp: '23%',\r\n  clnApp: '34%',\r\n  workApp: '16%',\r\n  planAvgCheck: '2323,45',\r\n  ups: 4,\r\n  upsP: '23%',\r\n  cross: 65,\r\n  crossP: '33%',\r\n  rej: 22,\r\n  rejP: '85%',\r\n  decl: 56,\r\n  declP: '12%',\r\n  declDbl: 322,\r\n  declDblP: '34%',\r\n  numOfConnected: 344,\r\n  connected: '23%',\r\n  children: [\r\n      {\r\n          key: i,\r\n          date: moment([2021, 6, 23]).format('DD.MM.YYYY'),\r\n          total: 600,\r\n          valid: 200,\r\n          validP: '30%',\r\n          unproc: 63,\r\n          appHour: 1,\r\n          unprocP: '10%',\r\n          proc: 46,\r\n          drtApp: '23%',\r\n          clnApp: '34%',\r\n          workApp: '16%',\r\n          planAvgCheck: '2323,45',\r\n          ups: 4,\r\n          upsP: '23%',\r\n          cross: 65,\r\n          crossP: '33%',\r\n          rej: 22,\r\n          rejP: '85%',\r\n          decl: 56,\r\n          declP: '12%',\r\n          declDbl: 322,\r\n          declDblP: '34%',\r\n          numOfConnected: 344,\r\n          connected: '23%',\r\n      },\r\n      {\r\n          key: i,\r\n          date: moment([2021, 6, 21]).format('DD.MM.YYYY'),\r\n          total: 400,\r\n          valid: 400,\r\n          validP: '20%',\r\n          unproc: 46,\r\n          appHour: 1,\r\n          unprocP: '10%',\r\n          proc: 30,\r\n          drtApp: '23%',\r\n          clnApp: '34%',\r\n          workApp: '16%',\r\n          planAvgCheck: '2323,45',\r\n          ups: 4,\r\n          upsP: '23%',\r\n          cross: 65,\r\n          crossP: '33%',\r\n          rej: 22,\r\n          rejP: '85%',\r\n          decl: 56,\r\n          declP: '12%',\r\n          declDbl: 322,\r\n          declDblP: '34%',\r\n          numOfConnected: 344,\r\n          connected: '23%',\r\n      }\r\n  ]\r\n});\r\n}\r\n\r\nexport { tableData };\r\n\r\nexport const offers: string[] = [\r\n  'BG 10Bar Watch',\r\n  'BG CBDol',\r\n  'BG Bracelet Starry Sky',\r\n  'BG Combidress',\r\n  'RO Starryy Sky Watch',\r\n  'RO XTactical Watch',\r\n  'BG 10Bard Watch',\r\n  'BG CBDolf',\r\n  'BG Braceletr Starry Sky',\r\n  'BG Combidressg',\r\n  'RO Starry Sky Watch',\r\n  'RO XTacticall Watch',\r\n  'BG 10Barv Watch',\r\n  'BG CBDol4',\r\n  'BG Bracelett Starry Sky',\r\n  'BG Combidresse',\r\n  'RO Starryd Sky Watch',\r\n  'RO XTacticaly Watch',\r\n  'BG 10Bars Watch',\r\n  'BG CBDol7',\r\n  'BG Braceleto Starry Sky',\r\n  'BG Combidressa',\r\n  'RO Starryd Sky Watch',\r\n  'RO XTacticalz Watch',\r\n  'BG 10Bar5 Watch',\r\n  'BG CBDolh',\r\n  'BG Braceletdf Starry Sky',\r\n  'BG Combidresss',\r\n  'RO Starrya Sky Watch',\r\n  'RO XTacticalx Watch',\r\n  'BG 10Barz Watch',\r\n  'BG CBDolk',\r\n  'BG Braceletf Starry Sky',\r\n  'BG Combidressm',\r\n  'RO Starryl Sky Watch',\r\n  'RO XTacticalp Watch',\r\n];","import { useState, useEffect } from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Form, Row, Col, Input, Button, DatePicker, Select, Modal, Table, Divider, Dropdown, Menu, Checkbox, Badge, Typography } from 'antd';\r\nimport { DownOutlined, SyncOutlined, UndoOutlined, SaveOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\n\r\nimport { geo, offers } from '../../state/makeData';\r\n\r\nimport './styles.css';\r\n\r\nconst { Option }: any = Select;\r\nconst { Title } = Typography;\r\n\r\n// выбор фильтров\r\ntype Field = {\r\n  name: string;\r\n  label: string;\r\n  show: boolean;\r\n  component: (...props: any) => JSX.Element;\r\n}\r\n\r\nconst fields: Field[] = [\r\n  {\r\n    name: 'date',\r\n    label: 'Date',\r\n    show: true,\r\n    component: () => <DateFilter />,\r\n  },\r\n  {\r\n    name: 'geo',\r\n    label: 'Geo',\r\n    show: true,\r\n    component: props => <Geo {...props}/>,\r\n  },\r\n  {\r\n    name: 'offer',\r\n    label: 'Offer',\r\n    show: true,\r\n    component: () => <Offers />,\r\n  },\r\n  {\r\n    name: 'productSubType',\r\n    label: 'Product sub type',\r\n    show: true,\r\n    component: () => (\r\n      <Select defaultValue=\"N/A\">\r\n        <Option value=\"jack\">N/A</Option>\r\n        <Option value=\"jack\">Physics</Option>\r\n        <Option value=\"lucy\">Internal</Option>\r\n      </Select>\r\n    ),\r\n  },\r\n  {\r\n    name: 'currencyType',\r\n    label: 'Currency type',\r\n    show: true,\r\n    component: () => (\r\n      <Select defaultValue=\"Local Currency\" allowClear>\r\n                <Option value=\"jack\">Local Currency</Option>\r\n                <Option value=\"lucy\">Euro</Option>\r\n              </Select>\r\n    ),\r\n  },\r\n  {\r\n    name: 'leadType',\r\n    label: 'Lead type',\r\n    show: false,\r\n    component: () => (\r\n      <Select defaultValue=\"ALL\" allowClear>\r\n        <Option value=\"jack\">ALL</Option>\r\n        <Option value=\"lucy\">Common</Option>\r\n      </Select>\r\n    ),\r\n  },\r\n  {\r\n    name: 'office',\r\n    label: 'Office',\r\n    show: false,\r\n    component: () => (\r\n      <Select defaultValue=\"N/A\" allowClear>\r\n          <Option value=\"jack\">Bogota</Option>\r\n          <Option value=\"lucy\">Moscow</Option>\r\n        </Select>\r\n    ),\r\n  },\r\n  {\r\n    name: 'officeType',\r\n    label: 'Office type',\r\n    show: false,\r\n    component: () => (\r\n      <Select defaultValue=\"By Lead\" allowClear>\r\n          <Option value=\"jack\">By Lead</Option>\r\n          <Option value=\"lucy\">By Operator</Option>\r\n        </Select>\r\n    ),\r\n  },\r\n  {\r\n    name: 'webmaster',\r\n    label: 'Webmaster',\r\n    show: false,\r\n    component: () => (\r\n      <Select defaultValue=\"All\">\r\n        <Option value=\"jack\">Buyer</Option>\r\n        <Option value=\"jack\">External</Option>\r\n        <Option value=\"jack\">All</Option>\r\n    </Select>\r\n    ),\r\n  },\r\n  \r\n  {\r\n    name: 'TimeZone',\r\n    label: 'Time zone',\r\n    show: false,\r\n    component: () => (\r\n      <Select defaultValue=\"Moscow time\" allowClear>\r\n          <Option value=\"jack\">Moscow time</Option>\r\n          <Option value=\"lucy\">Geo time</Option>\r\n        </Select>\r\n    ),\r\n  },\r\n]\r\n\r\nconst FieldsSelect = ({filterFields, toggleFields}: {filterFields: Field[], toggleFields: (status: boolean, indx: number) => void}) => {\r\n  return(\r\n  \r\n    <Menu>\r\n      {filterFields.map( (el, indx) => (\r\n        <Menu.Item>\r\n        <Checkbox onChange={e => toggleFields(e.target.checked, indx)} checked={el.show}>{el.label}</Checkbox>\r\n      </Menu.Item>\r\n      ))}\r\n    </Menu>\r\n)};\r\n\r\nexport const Filters = ({onLoad, setFilters}: {onLoad: any, setFilters: any}) => {\r\n  const [form] = Form.useForm();\r\n  const [filterState, setFilterState] = useState({});\r\n  const [filterFields, changeFields] = useState(fields);\r\n\r\n\r\n  const toggleFields = (status: boolean, indx: number) => {\r\n    changeFields(filterFields.map((el, i) => {\r\n      if (i === indx) el.show = status;\r\n      return el;\r\n    }))\r\n  }\r\n\r\n  const onFinish = () => {\r\n    onLoad(true);\r\n    setTimeout(() => {\r\n      setFilters(filterState);\r\n      onLoad(false);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      name=\"advanced_search\"\r\n      className=\"ant-advanced-search-form\"\r\n      onFinish={onFinish}\r\n      layout=\"vertical\"\r\n    >\r\n      <Row>\r\n        <Col span={6}>\r\n          <Title level={4}>Geo Statistics</Title>\r\n        </Col>\r\n        <Col span={18} style={{ textAlign: 'right' }}>\r\n          <Dropdown overlay={() => <FieldsSelect toggleFields={toggleFields} filterFields={filterFields}/>} arrow={true}>\r\n          <Badge count={filterFields.filter(el=>!el.show).length}>\r\n            <Button>\r\n              Select filters <DownOutlined/>\r\n            </Button>\r\n            </Badge>\r\n          </Dropdown>\r\n          <Button\r\n            style={{ margin: '0 8px 0 10px' }}\r\n          >\r\n            <SaveOutlined />\r\n            Save settings\r\n          </Button>\r\n          <Button\r\n            style={{ margin: '0 8px 0 0' }}\r\n            onClick={() => {\r\n              form.resetFields();\r\n            }}\r\n          >\r\n            <UndoOutlined />\r\n            Reset view settings\r\n          </Button>\r\n          <Button htmlType=\"submit\">\r\n            <SyncOutlined />\r\n            Execute  query\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={16}>\r\n        {filterFields.map(el => (\r\n          el.show && \r\n          <Col span={5} >\r\n            <Form.Item\r\n              name={el.name}\r\n              label={el.label}\r\n            >\r\n              {el.component({setFilterState})}\r\n            </Form.Item>\r\n        </Col>\r\n        ))}\r\n      </Row>\r\n    </Form>\r\n  );\r\n}; \r\n\r\n// выбор гео\r\nconst Geo = ({setFilterState} : {setFilterState: any}) => {\r\n  const [defaultValue, setDefaultValue] = useState([]);\r\n\r\n  const onSelect = (value: string[] ) => {\r\n    const _value: any = value.includes('all') ? geo : value;\r\n\r\n    setDefaultValue(_value);\r\n    setFilterState({geo: _value})\r\n  }\r\n\r\n  return (<Select\r\n      mode=\"multiple\"\r\n      allowClear\r\n      placeholder=\"Please select\"\r\n      maxTagCount=\"responsive\"\r\n      onChange={onSelect}\r\n      listHeight={500}\r\n      defaultActiveFirstOption={false}\r\n      value={defaultValue}\r\n    >\r\n      <Option value=\"all\" label=\"All\" className=\"select_all\">\r\n          All\r\n      </Option>\r\n      {geo.map( el => <Option key={el}>{el}</Option>)}\r\n    </Select>\r\n  )\r\n}\r\n\r\n// выбор оффера\r\nconst Offers = (): JSX.Element => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [values, setValues] = useState([]);\r\n\r\n  const onSelect = (value: []) => {\r\n    setValues(value);\r\n  }\r\n\r\n  const onOpen = () => {\r\n    setVisible(true);\r\n  }\r\n\r\n  const onClear = () => {\r\n    setValues([]);\r\n  }\r\n\r\n  return (\r\n    <Select\r\n      mode=\"multiple\"\r\n      allowClear\r\n      placeholder=\"Please select\"\r\n      maxTagCount=\"responsive\"\r\n      listHeight={0}\r\n      onDropdownVisibleChange={onOpen}\r\n      value={values.map((el:OfferData) => el.name)}\r\n      onClear={onClear}\r\n      dropdownStyle={{display: 'none'}}\r\n      dropdownRender={child => {\r\n        return(\r\n          <SelectModal visible={visible} setVisible={setVisible} onSelect={onSelect} values={values}/>\r\n        )\r\n      }}\r\n    >\r\n    {offers.map( el => <Option key={el}>{el}</Option>)}\r\n  </Select>\r\n  )\r\n}\r\n\r\nconst { Search } = Input;\r\n\r\ninterface IOfferColumns {\r\n  title: string;\r\n  dataIndex: string;\r\n}\r\n\r\nconst columns: Array<IOfferColumns> = [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n  },\r\n]\r\n\r\ntype OfferData = {\r\n  key: number;\r\n  name: string;\r\n}\r\n\r\nconst data: OfferData[] = offers.map((el, index) => (\r\n    {\r\n      key: index,\r\n      name: el,\r\n    }\r\n  )\r\n);\r\n\r\nconst SelectModal = ({visible, setVisible, onSelect, values}: {visible: boolean, setVisible: any, onSelect: any, values: OfferData[]}): JSX.Element => {\r\n\r\n  const [tableData, filterTableData] = useState(data);\r\n  const [search, setSearch] = useState(false);\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState(values.map(el => el.key));\r\n\r\n  useEffect(() => {\r\n    setSelectedRowKeys(values.map(el => el.key));\r\n  },[values]);\r\n\r\n  const [searchStatus, setSearchStatus] = useState(false);\r\n  const rowSelection = {\r\n    selectedRowKeys,\r\n    onSelectAll: (selected: boolean, selectedRows: OfferData[]) => {\r\n      setSelectedRowKeys(selected ? searchStatus ? selectedRows.map(el => el.key) : data.map(el => el.key) : []);\r\n    },\r\n    onSelect: (record: any, selected: boolean, selectedRows: OfferData[]) => {\r\n      setSelectedRowKeys(selectedRows.map(el => el.key));\r\n    }\r\n  };\r\n\r\n  const onSelectData = () => {\r\n    onSelect(selectedRowKeys.map(key => data.find(el => el.key === key)));\r\n    setVisible(false);\r\n  }\r\n\r\n  const onSearch = _.debounce(e => {\r\n    searchTableItem(e.target.value);\r\n  }, 500)\r\n\r\n  const searchTableItem = (value: string) => {\r\n    let _d = [];\r\n    if (value) {\r\n      setSearchStatus(true);\r\n      _d = data.filter( el => el.name.toLowerCase().indexOf(value) !== -1);\r\n    } else {\r\n      setSearchStatus(false);\r\n      _d = data;\r\n    }\r\n\r\n    filterTableData(_d);\r\n  }\r\n\r\n  return(\r\n    <Modal\r\n          title=\"Offer\"\r\n          visible={visible}\r\n          onOk={() => onSelectData()}\r\n          onCancel={() => setVisible(false)}\r\n        >\r\n          <Search\r\n            placeholder=\"Text to search\" \r\n            loading={search}\r\n            onChange={onSearch}\r\n          />\r\n          <Divider />\r\n          <Table\r\n            rowSelection={rowSelection}\r\n            columns={columns}\r\n            dataSource={tableData}\r\n            bordered size=\"small\" \r\n            tableLayout='auto'\r\n          />\r\n          \r\n        </Modal>\r\n  )\r\n}\r\n\r\n\r\n// выбор периода\r\nconst { RangePicker } = DatePicker;\r\nconst dateFormat: string = 'DD.MM.YYYY';\r\nconst DateFilter = () => (\r\n    <RangePicker\r\n      defaultValue={[moment('12.07.2021', dateFormat), moment('12.07.2021', dateFormat)]}\r\n      format={dateFormat}\r\n    />\r\n);\r\n","import React from 'react';\r\nimport { Table, Spin } from 'antd';\r\nimport { Resizable } from 'react-resizable';\r\nimport { tableData, columns, TableData} from '../../state/makeData';\r\n\r\nimport './styles.css';\r\n\r\nconst ResizableTitle = (props: any) => {\r\n    const { onResize, width, ...restProps } = props;\r\n  \r\n    if (!width) {\r\n      return <th {...restProps} />;\r\n    }\r\n  \r\n    return (\r\n      <Resizable\r\n        width={width}\r\n        height={0}\r\n        handle={\r\n          <span\r\n            className=\"react-resizable-handle\"\r\n            onClick={e => {\r\n              e.stopPropagation();\r\n            }}\r\n          />\r\n        }\r\n        onResize={onResize}\r\n        draggableOpts={{ enableUserSelectHack: false }}\r\n      >\r\n        <th {...restProps} />\r\n      </Resizable>\r\n    );\r\n  };\r\n  \r\nexport class Tables extends React.Component<ITableProps, ITableState> {\r\n  state = {\r\n    selectedRowKeys: [],\r\n    columns: columns,\r\n    width: 1600,\r\n  };\r\n\r\n  components = {\r\n    header: {\r\n      cell: ResizableTitle,\r\n    },\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys: any[]) => {\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n\r\n  handleResize = (index: number) => (e: Event, { size } : {size: any}) => {\r\n    this.setState(({ columns }) => {\r\n      const nextColumns: any[] = [...columns];\r\n      nextColumns[index] = {\r\n        ...nextColumns[index],\r\n        width: size.width,\r\n      };\r\n      return { columns: nextColumns };\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    const { filters, loadStatus} = this.props;\r\n\r\n    let width: number = 70;\r\n\r\n    const columns: any[] = this.state.columns.map((col: any, index: number) => {\r\n        width = width + col.width;\r\n        return ({\r\n            ...col,\r\n            onHeaderCell: (column: any) => ({\r\n            width: column.width,\r\n            onResize: this.handleResize(index),\r\n            }),\r\n      })\r\n    });\r\n\r\n\r\n    const { selectedRowKeys } = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n      selections: [\r\n        Table.SELECTION_ALL,\r\n        Table.SELECTION_INVERT,\r\n        Table.SELECTION_NONE,\r\n      ],\r\n    };\r\n\r\n    const data: TableData[]= tableData.filter( (el: TableData) => {\r\n        if (filters?.geo?.length) {\r\n            return filters?.geo.includes(el.date);\r\n        } else {\r\n            return true;\r\n        }\r\n    });\r\n\r\n    return (        \r\n            <Spin size=\"large\" spinning={loadStatus}>\r\n                <Table components={this.components} rowSelection={rowSelection} columns={columns} dataSource={data} scroll={{ y: 800, x: width }} pagination={false} bordered size=\"small\" tableLayout='auto'/>\r\n            </Spin>\r\n    )\r\n  }\r\n}\r\n\r\ninterface ITableProps {\r\n  loadStatus: boolean;\r\n  filters: any; // статус фильтров пока не описан полностью \r\n}\r\n\r\ninterface ITableState {\r\n  selectedRowKeys: any[]; \r\n  columns: any[]; // данные о колонках не описаны\r\n  width: number;\r\n}","import React, { useState, FC } from 'react';\r\nimport { Layout } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport { Filters } from '../components/filters';\r\nimport { Tables } from '../components/tables';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nexport const MainLayout: FC = () => {\r\n  const [loadStatus, onLoad] = useState(false);\r\n  const [filters, setFilters] = useState({});\r\n\r\n  return (\r\n    <Layout>\r\n    <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\r\n      <div className=\"logo\" />\r\n    </Header>\r\n    <Content className=\"site-layout\" style={{ padding: '0 50px', marginTop: 64 }}>\r\n      <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 380, backgroundColor: '#fff'}}>\r\n        <Filters onLoad={onLoad} setFilters={setFilters}/>\r\n        <br />\r\n        <Tables loadStatus={loadStatus} filters={filters}/>\r\n      </div>\r\n    </Content>\r\n    <Footer style={{ textAlign: 'center' }}>Absolut</Footer>\r\n  </Layout>\r\n  );\r\n}\r\n","import { MainLayout } from './layouts/index';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst App = () => (\r\n  <MainLayout/>\r\n)\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}