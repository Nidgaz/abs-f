{"version":3,"sources":["state/makeData.ts","components/dateFilter/DateFilter.tsx","components/filters/filters.tsx","components/tables/desktopTable.tsx","components/tables/mobileTable.tsx","components/tables/tables.tsx","layouts/main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["geo","columns","title","dataIndex","defaultSortOrder","sorter","a","b","date","width","ellipsis","align","className","tableData","i","push","key","total","valid","validP","unproc","appHour","unprocP","proc","drtApp","clnApp","workApp","planAvgCheck","ups","upsP","cross","crossP","rej","rejP","decl","declP","declDbl","declDblP","numOfConnected","connected","children","moment","format","Period","offers","RangePicker","DatePicker","dateFormat","SpecificPeriodSelector","setPeriod","setGroup","setType","period","group","type","onClick","DateFilter","useState","status","setStatus","Week","Date","setDate","wrapperRef","useRef","selectPeriod","nowDate","getDate","getFullYear","getMonth","handleClickOutside","event","useEffect","document","addEventListener","removeEventListener","value","renderExtraFooter","onChange","dates","dateStrings","open","onOpenChange","ref","Option","Select","Title","Typography","fields","name","label","show","component","props","defaultValue","allowClear","FieldsSelect","filterFields","toggleFields","map","el","indx","Item","e","target","checked","Filters","onLoad","setFilters","Form","useForm","form","filterState","setFilterState","changeFields","onFinish","setTimeout","layout","span","xs","sm","level","style","textAlign","overlay","arrow","count","filter","length","EllipsisOutlined","margin","SaveOutlined","resetFields","UndoOutlined","htmlType","SyncOutlined","gutter","Geo","setDefaultValue","mode","placeholder","maxTagCount","_value","includes","listHeight","defaultActiveFirstOption","Offers","visible","setVisible","values","setValues","onSelect","onDropdownVisibleChange","onClear","dropdownStyle","display","dropdownRender","child","Search","Input","data","index","SelectModal","filterTableData","selectedRowKeys","setSelectedRowKeys","searchStatus","setSearchStatus","rowSelection","onSelectAll","selected","selectedRows","record","onSearch","_","searchTableItem","_d","toLowerCase","indexOf","onOk","find","onCancel","dataSource","bordered","size","tableLayout","ResizableTitle","onResize","restProps","height","handle","stopPropagation","draggableOpts","enableUserSelectHack","DesktopTable","state","components","header","cell","onSelectChange","setState","handleResize","nextColumns","this","col","onHeaderCell","column","selections","Table","SELECTION_ALL","SELECTION_INVERT","SELECTION_NONE","scroll","y","x","pagination","React","Component","MobileTable","isChild","Set","showChildren","getShowChildren","c","element","Object","entries","l","has","childrens","delete","add","toogleChildrenVisible","block","UpOutlined","DownOutlined","Tables","loadStatus","filters","setMode","handlerResize","window","innerWidth","spinning","Header","Layout","Content","Footer","MainLayout","position","zIndex","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.89843c18.chunk.js","sourcesContent":["import moment from 'moment';\r\n\r\nexport const geo: string[] = [\r\n  'AR', 'BG', 'CK', 'TR', 'MX', 'RO', 'PT', 'ID', 'GN'\r\n];\r\n\r\nexport interface TableData {\r\n  key: number;\r\n  date: string;\r\n  total: number;\r\n  valid: number;\r\n  validP: string;\r\n  unproc: number;\r\n  appHour: number;\r\n  unprocP: string;\r\n  proc: number;\r\n  drtApp: string;\r\n  clnApp: string;\r\n  workApp: string;\r\n  planAvgCheck: string;\r\n  ups: number;\r\n  upsP: string;\r\n  cross: number;\r\n  crossP: string;\r\n  rej: number;\r\n  rejP: string;\r\n  decl: number;\r\n  declP: string;\r\n  declDbl: number;\r\n  declDblP: string;\r\n  numOfConnected: number;\r\n  connected: string;\r\n  children?: TableData[];\r\n}\r\n\r\nexport const columns = [\r\n{\r\n  title: 'Date',\r\n  dataIndex: 'date',\r\n  defaultSortOrder: 'descend',\r\n  sorter: (a: any, b: any) => a.date - b.date,\r\n  width: 80,\r\n},\r\n{\r\n  title: 'Total',\r\n  dataIndex: 'total',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 40,\r\n},\r\n{\r\n  title: 'Valid',\r\n  dataIndex: 'valid',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 40,\r\n},\r\n{\r\n  title: 'Valid%',\r\n  dataIndex: 'validP',\r\n  ellipsis: true,\r\n  className: 'color_1',\r\n  align: 'right',\r\n  width: 55,\r\n},\r\n{\r\n  title: 'Unproc',\r\n  dataIndex: 'unproc',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 60,\r\n},\r\n{\r\n  title: 'App hour',\r\n  dataIndex: 'appHour',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 70,\r\n},\r\n{\r\n  title: 'Unproc%',\r\n  dataIndex: 'unprocP',\r\n  ellipsis: true,\r\n  className: 'color_1',\r\n  align: 'right',\r\n  width: 70,\r\n},\r\n{\r\n  title: 'Proc.',\r\n  dataIndex: 'proc',\r\n  ellipsis: true,\r\n  className: 'color_2',\r\n  align: 'right',\r\n  width: 45,\r\n},\r\n{\r\n  title: 'Drt. app.',\r\n  dataIndex: 'drtApp',\r\n  ellipsis: true,\r\n  className: 'color_2',\r\n  align: 'right',\r\n  width: 70,\r\n},\r\n{\r\n  title: 'Cln App',\r\n  dataIndex: 'clnApp',\r\n  ellipsis: true,\r\n  className: 'color_3',\r\n  align: 'right',\r\n  width: 60,\r\n},\r\n{\r\n  title: 'Work App.%',\r\n  dataIndex: 'workApp',\r\n  ellipsis: true,\r\n  className: 'color_1',\r\n  align: 'right',\r\n  width: 90,\r\n},\r\n{\r\n  title: 'Plan Avg. check',\r\n  dataIndex: 'planAvgCheck',\r\n  ellipsis: true,\r\n  className: 'text_bold',\r\n  align: 'right',\r\n  width: 115,\r\n},\r\n{\r\n  title: 'Ups',\r\n  dataIndex: 'ups',\r\n  ellipsis: true,\r\n  className: 'color_1',\r\n  align: 'right',\r\n  width: 40,\r\n},\r\n{\r\n  title: 'Ups%',\r\n  dataIndex: 'upsP',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 50,\r\n},\r\n{\r\n  title: 'Cross',\r\n  dataIndex: 'cross',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 50,\r\n},\r\n{\r\n  title: 'Cross%',\r\n  dataIndex: 'crossP',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 60,\r\n},\r\n{\r\n  title: 'Rej.',\r\n  dataIndex: 'rej',\r\n  ellipsis: true,\r\n  className: 'color_4',\r\n  align: 'right',\r\n  width: 38,\r\n},\r\n{\r\n  title: 'Rej%',\r\n  dataIndex: 'rejP',\r\n  ellipsis: true,\r\n  className: 'color_4',\r\n  align: 'right',\r\n  width: 45,\r\n},\r\n{\r\n  title: 'Decl',\r\n  dataIndex: 'decl',\r\n  ellipsis: true,\r\n  className: 'color_5',\r\n  align: 'right',\r\n  width: 40,\r\n},\r\n{\r\n  title: 'Decl%',\r\n  dataIndex: 'declP',\r\n  ellipsis: true,\r\n  className: 'color_5',\r\n  align: 'right',\r\n  width: 55,\r\n},\r\n{\r\n  title: 'Decl_dbl',\r\n  dataIndex: 'declDbl',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 70,\r\n},\r\n{\r\n  title: 'Decl_dbl%',\r\n  dataIndex: 'declDblP',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 80,\r\n},\r\n{\r\n  title: 'Num of connected',\r\n  dataIndex: 'numOfConnected',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 130,\r\n},\r\n{\r\n  title: 'Connected',\r\n  dataIndex: 'connected',\r\n  ellipsis: true,\r\n  align: 'right',\r\n  width: 85,\r\n},\r\n];\r\n\r\nconst tableData: TableData[] = [];\r\n\r\nfor (let i = 0; i < 9; i++) {\r\ntableData.push({\r\n  key: i,\r\n  date: geo[i],\r\n  total: 1000,\r\n  valid: 600,\r\n  validP: '50%',\r\n  unproc: 100,\r\n  appHour: 2,\r\n  unprocP: '10%',\r\n  proc: 76,\r\n  drtApp: '23%',\r\n  clnApp: '34%',\r\n  workApp: '16%',\r\n  planAvgCheck: '2323,45',\r\n  ups: 4,\r\n  upsP: '23%',\r\n  cross: 65,\r\n  crossP: '33%',\r\n  rej: 22,\r\n  rejP: '85%',\r\n  decl: 56,\r\n  declP: '12%',\r\n  declDbl: 322,\r\n  declDblP: '34%',\r\n  numOfConnected: 344,\r\n  connected: '23%',\r\n  children: [\r\n      {\r\n          key: i,\r\n          date: moment([2021, 6, 23]).format('DD.MM.YYYY'),\r\n          total: 600,\r\n          valid: 200,\r\n          validP: '30%',\r\n          unproc: 63,\r\n          appHour: 1,\r\n          unprocP: '10%',\r\n          proc: 46,\r\n          drtApp: '23%',\r\n          clnApp: '34%',\r\n          workApp: '16%',\r\n          planAvgCheck: '2323,45',\r\n          ups: 4,\r\n          upsP: '23%',\r\n          cross: 65,\r\n          crossP: '33%',\r\n          rej: 22,\r\n          rejP: '85%',\r\n          decl: 56,\r\n          declP: '12%',\r\n          declDbl: 322,\r\n          declDblP: '34%',\r\n          numOfConnected: 344,\r\n          connected: '23%',\r\n      },\r\n      {\r\n          key: i,\r\n          date: moment([2021, 6, 21]).format('DD.MM.YYYY'),\r\n          total: 400,\r\n          valid: 400,\r\n          validP: '20%',\r\n          unproc: 46,\r\n          appHour: 1,\r\n          unprocP: '10%',\r\n          proc: 30,\r\n          drtApp: '23%',\r\n          clnApp: '34%',\r\n          workApp: '16%',\r\n          planAvgCheck: '2323,45',\r\n          ups: 4,\r\n          upsP: '23%',\r\n          cross: 65,\r\n          crossP: '33%',\r\n          rej: 22,\r\n          rejP: '85%',\r\n          decl: 56,\r\n          declP: '12%',\r\n          declDbl: 322,\r\n          declDblP: '34%',\r\n          numOfConnected: 344,\r\n          connected: '23%',\r\n      }\r\n  ]\r\n});\r\n}\r\n\r\nexport { tableData };\r\n\r\nexport const offers: string[] = [\r\n  'BG 10Bar Watch',\r\n  'BG CBDol',\r\n  'BG Bracelet Starry Sky',\r\n  'BG Combidress',\r\n  'RO Starryy Sky Watch',\r\n  'RO XTactical Watch',\r\n  'BG 10Bard Watch',\r\n  'BG CBDolf',\r\n  'BG Braceletr Starry Sky',\r\n  'BG Combidressg',\r\n  'RO Starry Sky Watch',\r\n  'RO XTacticall Watch',\r\n  'BG 10Barv Watch',\r\n  'BG CBDol4',\r\n  'BG Bracelett Starry Sky',\r\n  'BG Combidresse',\r\n  'RO Starryd Sky Watch',\r\n  'RO XTacticaly Watch',\r\n  'BG 10Bars Watch',\r\n  'BG CBDol7',\r\n  'BG Braceleto Starry Sky',\r\n  'BG Combidressa',\r\n  'RO Starryd Sky Watch',\r\n  'RO XTacticalz Watch',\r\n  'BG 10Bar5 Watch',\r\n  'BG CBDolh',\r\n  'BG Braceletdf Starry Sky',\r\n  'BG Combidresss',\r\n  'RO Starrya Sky Watch',\r\n  'RO XTacticalx Watch',\r\n  'BG 10Barz Watch',\r\n  'BG CBDolk',\r\n  'BG Braceletf Starry Sky',\r\n  'BG Combidressm',\r\n  'RO Starryl Sky Watch',\r\n  'RO XTacticalp Watch',\r\n];","import React, { useState, useEffect, useRef } from 'react';\r\nimport { DatePicker, Button } from 'antd';\r\nimport moment, { Moment }  from \"moment\";\r\n\r\nimport './styles.css';\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst dateFormat: string = 'DD.MM.YYYY';\r\n\r\ninterface ISpecificPeriodSelector {\r\n  setPeriod: any;\r\n  setGroup: any;\r\n  setType: any;\r\n  period: string;\r\n  group: string;\r\n  type: string;\r\n}\r\n\r\nconst SpecificPeriodSelector = ({setPeriod, setGroup, setType, period, group, type} : ISpecificPeriodSelector): JSX.Element => {\r\n  return (\r\n    <>\r\n      <div>Period:</div>\r\n      <div className=\"wrapper-period-select\">\r\n        <Button onClick={() => setPeriod('today')} type={period === 'today' ? 'primary' : 'default'}>Today</Button>\r\n        <Button onClick={() => setPeriod('week')} type={period === 'week' ? 'primary' : 'default'}>Last Week</Button>\r\n        <Button onClick={() => setPeriod('month')} type={period === 'month' ? 'primary' : 'default'}>Last Month</Button>\r\n      </div>\r\n      \r\n      <div>Group: </div>\r\n      <div className=\"wrapper-period-select\">\r\n        <Button onClick={() => setGroup('day')} type={group === 'day' ? 'primary' : 'default'}>Day</Button>\r\n        <Button onClick={() => setGroup('weeks')} type={group === 'weeks' ? 'primary' : 'default'}>Week's</Button>\r\n        <Button onClick={() => setGroup('months')} type={group === 'months' ? 'primary' : 'default'}>Month's</Button>\r\n        <Button onClick={() => setGroup('total')} type={group === 'total' ? 'primary' : 'default'}>Total</Button>\r\n      </div>\r\n      \r\n      <div>Type: </div>\r\n      <div className=\"wrapper-period-select\">\r\n        <Button onClick={() => setType('approved')} type={type === 'approved' ? 'primary' : 'default'}>Approved</Button>\r\n        <Button onClick={() => setType('leads')} type={type === 'leads' ? 'primary' : 'default'}>Leads</Button>\r\n        <Button onClick={() => setType('sendToCS')} type={type === 'sendToCS' ? 'primary' : 'default'}>Send to CS</Button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nenum Period { \r\n  Today = \"today\", \r\n  Week = \"week\",\r\n  month = \"month\", \r\n};\r\n\r\nconst DateFilter = (): JSX.Element => {\r\n  const [status, setStatus] = useState<boolean>(false);\r\n  const [period, setPeriod] = useState<string>(Period.Week);\r\n  const [group, setGroup] = useState<string>('weeks');\r\n  const [type, setType] = useState<string>('total');\r\n  const [date, setDate] = useState<[Moment, Moment]>([moment(new Date(), dateFormat), moment(new Date(), dateFormat)]);\r\n\r\n  const wrapperRef = useRef<any>();\r\n\r\n  const onChange  = (dates: any, dateStrings: [string, string]): void  =>  {\r\n      setPeriod('');\r\n      setGroup('');\r\n  };\r\n\r\n  const handleToggle = (status:  boolean) => {\r\n    setStatus(status);\r\n  }\r\n\r\n  const selectPeriod= (period: string) => {\r\n    const nowDate: Date = new Date;\r\n\r\n    if ( period ===  'today') {\r\n      setDate([moment(nowDate, dateFormat), moment(nowDate, dateFormat)]);\r\n    }\r\n\r\n    if ( period ===  'week') {\r\n      setDate([moment(nowDate.getDate() - 7, dateFormat), moment(nowDate, dateFormat)]);\r\n    }\r\n\r\n    if ( period ===  'month') {\r\n      setDate([moment(new Date(nowDate.getFullYear(), nowDate.getMonth(), 1), dateFormat), moment(new Date(), dateFormat)]);\r\n    }\r\n\r\n    setPeriod(period);\r\n  }\r\n\r\n  const handleClickOutside = (event: any) => {\r\n    // if (wrapperRef.current && !wrapperRef?.current?.contains(event.target)) {\r\n    //   setStatus(false);\r\n    // }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClickOutside, true);\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside, true);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n      <RangePicker\r\n        value={date}\r\n        format={dateFormat}\r\n        renderExtraFooter={() => \r\n          <SpecificPeriodSelector \r\n            setPeriod={selectPeriod} \r\n            setGroup={setGroup} \r\n            setType={setType}\r\n            period={period} \r\n            group={group} \r\n            type={type}\r\n          />}\r\n        onChange={onChange}\r\n        open={status}\r\n        onOpenChange={handleToggle}\r\n        ref={wrapperRef}\r\n      />\r\n  )\r\n};\r\n\r\nexport { DateFilter };","import { useState, useEffect } from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Form, Row, Col, Input, Button, Select, Modal, Table, Divider, Dropdown, Menu, Checkbox, Badge, Typography, Tooltip } from 'antd';\r\nimport { EllipsisOutlined, SyncOutlined, UndoOutlined, SaveOutlined } from '@ant-design/icons';\r\n\r\nimport { geo, offers } from '../../state/makeData';\r\nimport { DateFilter } from '../dateFilter';\r\n\r\nimport './styles.css';\r\n\r\nconst { Option }: any = Select;\r\nconst { Title }: any = Typography;\r\n\r\n// выбор фильтров\r\ntype Field = {\r\n  name: string;\r\n  label: string;\r\n  show: boolean;\r\n  component: (...props: any) => JSX.Element;\r\n}\r\n\r\nconst fields: Field[] = [\r\n  {\r\n    name: 'date',\r\n    label: 'Date',\r\n    show: true,\r\n    component: () => <DateFilter />,\r\n  },\r\n  {\r\n    name: 'geo',\r\n    label: 'Geo',\r\n    show: true,\r\n    component: props => <Geo {...props}/>,\r\n  },\r\n  {\r\n    name: 'offer',\r\n    label: 'Offer',\r\n    show: true,\r\n    component: () => <Offers />,\r\n  },\r\n  {\r\n    name: 'productSubType',\r\n    label: 'Product sub type',\r\n    show: true,\r\n    component: () => (\r\n      <Select defaultValue=\"N/A\">\r\n        <Option value=\"jack\">N/A</Option>\r\n        <Option value=\"jack\">Physics</Option>\r\n        <Option value=\"lucy\">Internal</Option>\r\n      </Select>\r\n    ),\r\n  },\r\n  {\r\n    name: 'currencyType',\r\n    label: 'Currency type',\r\n    show: true,\r\n    component: () => (\r\n      <Select defaultValue=\"Local Currency\" allowClear>\r\n                <Option value=\"jack\">Local Currency</Option>\r\n                <Option value=\"lucy\">Euro</Option>\r\n              </Select>\r\n    ),\r\n  },\r\n  {\r\n    name: 'leadType',\r\n    label: 'Lead type',\r\n    show: false,\r\n    component: () => (\r\n      <Select defaultValue=\"ALL\" allowClear>\r\n        <Option value=\"jack\">ALL</Option>\r\n        <Option value=\"lucy\">Common</Option>\r\n      </Select>\r\n    ),\r\n  },\r\n  {\r\n    name: 'office',\r\n    label: 'Office',\r\n    show: false,\r\n    component: () => (\r\n      <Select defaultValue=\"N/A\" allowClear>\r\n          <Option value=\"jack\">Bogota</Option>\r\n          <Option value=\"lucy\">Moscow</Option>\r\n        </Select>\r\n    ),\r\n  },\r\n  {\r\n    name: 'officeType',\r\n    label: 'Office type',\r\n    show: false,\r\n    component: () => (\r\n      <Select defaultValue=\"By Lead\" allowClear>\r\n          <Option value=\"jack\">By Lead</Option>\r\n          <Option value=\"lucy\">By Operator</Option>\r\n        </Select>\r\n    ),\r\n  },\r\n  {\r\n    name: 'webmaster',\r\n    label: 'Webmaster',\r\n    show: false,\r\n    component: () => (\r\n      <Select defaultValue=\"All\">\r\n        <Option value=\"jack\">Buyer</Option>\r\n        <Option value=\"jack\">External</Option>\r\n        <Option value=\"jack\">All</Option>\r\n    </Select>\r\n    ),\r\n  },\r\n  \r\n  {\r\n    name: 'TimeZone',\r\n    label: 'Time zone',\r\n    show: false,\r\n    component: () => (\r\n      <Select defaultValue=\"Moscow time\" allowClear>\r\n          <Option value=\"jack\">Moscow time</Option>\r\n          <Option value=\"lucy\">Geo time</Option>\r\n        </Select>\r\n    ),\r\n  },\r\n]\r\n\r\nconst FieldsSelect = ({filterFields, toggleFields}: {filterFields: Field[], toggleFields: (status: boolean, indx: number) => void}) => {\r\n  return(\r\n  \r\n    <Menu>\r\n      {filterFields.map( (el, indx) => (\r\n        <Menu.Item>\r\n        <Checkbox onChange={e => toggleFields(e.target.checked, indx)} checked={el.show}>{el.label}</Checkbox>\r\n      </Menu.Item>\r\n      ))}\r\n    </Menu>\r\n)};\r\n\r\nexport const Filters = ({onLoad, setFilters}: {onLoad: any, setFilters: any}) => {\r\n  const [form] = Form.useForm();\r\n  const [filterState, setFilterState] = useState({});\r\n  const [filterFields, changeFields] = useState(fields);\r\n\r\n\r\n  const toggleFields = (status: boolean, indx: number) => {\r\n    changeFields(filterFields.map((el, i) => {\r\n      if (i === indx) el.show = status;\r\n      return el;\r\n    }))\r\n  }\r\n\r\n  const onFinish = () => {\r\n    onLoad(true);\r\n    setTimeout(() => {\r\n      setFilters(filterState);\r\n      onLoad(false);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      name=\"advanced_search\"\r\n      className=\"ant-advanced-search-form\"\r\n      onFinish={onFinish}\r\n      layout=\"vertical\"\r\n    >\r\n      <Row className=\"header-filter\">\r\n        <Col span={6} xs={9} sm={6}>\r\n          <Title level={4}>Geo Statistics</Title>\r\n        </Col>\r\n        <Col span={18} xs={15} sm={18} style={{ textAlign: 'right' }}>\r\n          <Dropdown overlay={() => <FieldsSelect toggleFields={toggleFields} filterFields={filterFields}/>} arrow={true}>\r\n            <Badge count={filterFields.filter(el=>!el.show).length}>\r\n              <Tooltip title=\"Select filters\"> \r\n                <Button>\r\n                  <EllipsisOutlined />\r\n                </Button>\r\n              </Tooltip>\r\n            </Badge>\r\n          </Dropdown>\r\n          <Tooltip title=\"Save settings\"> \r\n            <Button\r\n              style={{ margin: '0 8px 0 10px' }}\r\n            >\r\n              <SaveOutlined />\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip title=\"Reset view settings\">\r\n            <Button\r\n              style={{ margin: '0 8px 0 0' }}\r\n              onClick={() => {\r\n                form.resetFields();\r\n              }}\r\n            >\r\n              <UndoOutlined />\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip title=\"Execute  query\">\r\n            <Button htmlType=\"submit\">\r\n              <SyncOutlined />\r\n            </Button>\r\n          </Tooltip>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={16}>\r\n        {filterFields.map(el => (\r\n          el.show && \r\n          <Col  xs={12} sm={5} >\r\n            <Form.Item\r\n              name={el.name}\r\n              label={el.label}\r\n            >\r\n              {el.component({setFilterState})}\r\n            </Form.Item>\r\n        </Col>\r\n        ))}\r\n      </Row>\r\n    </Form>\r\n  );\r\n}; \r\n\r\n// выбор гео\r\nconst Geo = ({setFilterState} : {setFilterState: any}) => {\r\n  const [defaultValue, setDefaultValue] = useState([]);\r\n\r\n  const onSelect = (value: string[] ) => {\r\n    const _value: any = value.includes('all') ? geo : value;\r\n\r\n    setDefaultValue(_value);\r\n    setFilterState({geo: _value})\r\n  }\r\n\r\n  return (<Select\r\n      mode=\"multiple\"\r\n      allowClear\r\n      placeholder=\"Please select\"\r\n      maxTagCount=\"responsive\"\r\n      onChange={onSelect}\r\n      listHeight={500}\r\n      defaultActiveFirstOption={false}\r\n      value={defaultValue}\r\n    >\r\n      <Option value=\"all\" label=\"All\" className=\"select_all\">\r\n          All\r\n      </Option>\r\n      {geo.map( el => <Option key={el}>{el}</Option>)}\r\n    </Select>\r\n  )\r\n}\r\n\r\n// выбор оффера\r\nconst Offers = (): JSX.Element => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [values, setValues] = useState([]);\r\n\r\n  const onSelect = (value: []) => {\r\n    setValues(value);\r\n  }\r\n\r\n  const onOpen = () => {\r\n    setVisible(true);\r\n  }\r\n\r\n  const onClear = () => {\r\n    setValues([]);\r\n  }\r\n\r\n  return (\r\n    <Select\r\n      mode=\"multiple\"\r\n      allowClear\r\n      placeholder=\"Please select\"\r\n      maxTagCount=\"responsive\"\r\n      listHeight={0}\r\n      onDropdownVisibleChange={onOpen}\r\n      value={values.map((el:OfferData) => el.name)}\r\n      onClear={onClear}\r\n      dropdownStyle={{display: 'none'}}\r\n      dropdownRender={child => {\r\n        return(\r\n          <SelectModal visible={visible} setVisible={setVisible} onSelect={onSelect} values={values}/>\r\n        )\r\n      }}\r\n    >\r\n    {offers.map( el => <Option key={el}>{el}</Option>)}\r\n  </Select>\r\n  )\r\n}\r\n\r\nconst { Search } = Input;\r\n\r\ninterface IOfferColumns {\r\n  title: string;\r\n  dataIndex: string;\r\n}\r\n\r\nconst columns: Array<IOfferColumns> = [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n  },\r\n]\r\n\r\ntype OfferData = {\r\n  key: number;\r\n  name: string;\r\n}\r\n\r\nconst data: OfferData[] = offers.map((el, index) => (\r\n    {\r\n      key: index,\r\n      name: el,\r\n    }\r\n  )\r\n);\r\n\r\nconst SelectModal = ({visible, setVisible, onSelect, values}: {visible: boolean, setVisible: any, onSelect: any, values: OfferData[]}): JSX.Element => {\r\n\r\n  const [tableData, filterTableData] = useState(data);\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState(values.map(el => el.key));\r\n\r\n  useEffect(() => {\r\n    setSelectedRowKeys(values.map(el => el.key));\r\n  },[values]);\r\n\r\n  const [searchStatus, setSearchStatus] = useState(false);\r\n  const rowSelection = {\r\n    selectedRowKeys,\r\n    onSelectAll: (selected: boolean, selectedRows: OfferData[]) => {\r\n      setSelectedRowKeys(selected ? searchStatus ? selectedRows.map(el => el.key) : data.map(el => el.key) : []);\r\n    },\r\n    onSelect: (record: any, selected: boolean, selectedRows: OfferData[]) => {\r\n      setSelectedRowKeys(selectedRows.map(el => el.key));\r\n    }\r\n  };\r\n\r\n  const onSelectData = () => {\r\n    onSelect(selectedRowKeys.map(key => data.find(el => el.key === key)));\r\n    setVisible(false);\r\n  }\r\n\r\n  const onSearch = _.debounce(e => {\r\n    searchTableItem(e.target.value);\r\n  }, 500)\r\n\r\n  const searchTableItem = (value: string) => {\r\n    let _d = [];\r\n    \r\n    if (value) {\r\n      setSearchStatus(true);\r\n      _d = data.filter( el => el.name.toLowerCase().indexOf(value) !== -1);\r\n    } else {\r\n      setSearchStatus(false);\r\n      _d = data;\r\n    }\r\n\r\n    filterTableData(_d);\r\n  }\r\n\r\n  return(\r\n    <Modal\r\n          title=\"Offer\"\r\n          visible={visible}\r\n          onOk={() => onSelectData()}\r\n          onCancel={() => setVisible(false)}\r\n        >\r\n          <Search\r\n            placeholder=\"Text to search\" \r\n            onChange={onSearch}\r\n          />\r\n          <Divider />\r\n          <Table\r\n            rowSelection={rowSelection}\r\n            columns={columns}\r\n            dataSource={tableData}\r\n            bordered size=\"small\" \r\n            tableLayout='auto'\r\n          />\r\n          \r\n        </Modal>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\nimport { Resizable } from 'react-resizable';\r\nimport { columns, TableData} from '../../state/makeData';\r\n\r\nexport interface ITableProps {\r\n  data: TableData[]; // статус фильтров пока не описан полностью \r\n}\r\n\r\nexport interface ITableState {\r\n  selectedRowKeys: any[]; \r\n  columns: any[]; // данные о колонках не описаны\r\n  width: number;\r\n}\r\n\r\nconst ResizableTitle = (props: any) => {\r\n    const { onResize, width, ...restProps } = props;\r\n  \r\n    if (!width) {\r\n      return <th {...restProps} />;\r\n    }\r\n  \r\n    return (\r\n      <Resizable\r\n        width={width}\r\n        height={0}\r\n        handle={\r\n          <span\r\n            className=\"react-resizable-handle\"\r\n            onClick={e => {\r\n              e.stopPropagation();\r\n            }}\r\n          />\r\n        }\r\n        onResize={onResize}\r\n        draggableOpts={{ enableUserSelectHack: false }}\r\n      >\r\n        <th {...restProps} />\r\n      </Resizable>\r\n    );\r\n  };\r\n  \r\nexport class DesktopTable extends React.Component<ITableProps, ITableState> {\r\n  state = {\r\n    selectedRowKeys: [],\r\n    columns: columns,\r\n    width: 1600,\r\n  };\r\n\r\n  components = {\r\n    header: {\r\n      cell: ResizableTitle,\r\n    },\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys: any[]) => {\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n\r\n  handleResize = (index: number) => (e: Event, { size } : {size: any}) => {\r\n    this.setState(({ columns }) => {\r\n      const nextColumns: any[] = [...columns];\r\n      nextColumns[index] = {\r\n        ...nextColumns[index],\r\n        width: size.width,\r\n      };\r\n      return { columns: nextColumns };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.props;\r\n    let width: number = 70;\r\n    const columns: any[] = this.state.columns.map((col: any, index: number) => {\r\n        width = width + col.width;\r\n        return ({\r\n            ...col,\r\n            onHeaderCell: (column: any) => ({\r\n            width: column.width,\r\n            onResize: this.handleResize(index),\r\n            }),\r\n      })\r\n    });\r\n    const { selectedRowKeys } = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n      selections: [\r\n        Table.SELECTION_ALL,\r\n        Table.SELECTION_INVERT,\r\n        Table.SELECTION_NONE,\r\n      ],\r\n    };\r\n\r\n    return (        \r\n        <Table components={this.components} rowSelection={rowSelection} columns={columns} dataSource={data} scroll={{ y: 800, x: width }} pagination={false} bordered size=\"small\" tableLayout='auto'/>\r\n    )\r\n  }\r\n}","import { useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport { DownOutlined, UpOutlined } from '@ant-design/icons';\r\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\r\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\r\n\r\nimport { columns, TableData} from '../../state/makeData';\r\n\r\nexport interface ITableProps {\r\n    data: TableData[]; // статус фильтров пока не описан полностью \r\n    isChild?: boolean;\r\n}\r\n\r\nexport const MobileTable = ({data, isChild = false}: ITableProps) => {\r\n    const [showChildren, getShowChildren] = useState(new Set());\r\n\r\n    const toogleChildrenVisible = (key: number) => {\r\n        const childrens = new Set(showChildren);\r\n\r\n        if (childrens.has(key)) {\r\n            childrens.delete(key)\r\n        } else {\r\n            childrens.add(key);\r\n        }\r\n\r\n        getShowChildren(childrens);\r\n    }\r\n    \r\n    return (\r\n        <Table>\r\n            <Thead>\r\n                <Tr>\r\n                    {columns.map((el, indx) => (\r\n                        <Th>{indx === 0 && !isChild ? '' : el.title}</Th>\r\n                    ))}\r\n                </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n                {data.map( i => {\r\n                    return ([\r\n                        <Tr className={i.children ? 'table-mobile-main' : ''}>\r\n                            {columns.map( c => {\r\n                                const element = Object.entries(i).find(l  =>  l[0].includes(c.dataIndex));\r\n                                if (!element) return null;\r\n                                return (\r\n                                    <Td className={c.className}>{element[1]}</Td>\r\n                                )\r\n                            })}\r\n                        </Tr>,\r\n                        i.children  && showChildren.has(i.key) && <MobileTable data={i.children} isChild={!!i.children}/>,\r\n                        i.children &&  \r\n                            <Button \r\n                                type=\"primary\" \r\n                                className=\"table-show-more\" \r\n                                onClick={() => toogleChildrenVisible(i.key)} \r\n                                block>\r\n                                    {!showChildren.has(i.key) ? <><DownOutlined /> Expand</> : \r\n                                    <><UpOutlined /> Roll up </>}\r\n                            </Button>,\r\n                    ])\r\n                })}\r\n            </Tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\n\r\n","import {useState, useEffect} from 'react';\r\nimport { Spin } from 'antd';\r\nimport { tableData, TableData} from '../../state/makeData';\r\nimport { DesktopTable } from './desktopTable';\r\nimport { MobileTable } from './mobileTable';\r\n\r\nimport './styles.css';\r\n\r\nexport interface ITableProps {\r\n  loadStatus: boolean;\r\n  filters: any; // статус фильтров пока не описан полностью \r\n}\r\n\r\nexport const Tables = ({loadStatus, filters}: ITableProps) => {\r\n  const [mode, setMode] = useState<string>('desktop');\r\n\r\n  useEffect(() => {\r\n    handlerResize();\r\n    window.addEventListener('resize', handlerResize, false);\r\n    return () => {\r\n      window.removeEventListener('resize', handlerResize);\r\n    }\r\n  }, [])\r\n\r\n  const handlerResize = () => {\r\n     if (window.innerWidth < 700) {\r\n        setMode('mobile');\r\n      } else {\r\n        setMode('desktop');\r\n      }\r\n  }\r\n\r\n  const data: TableData[]= tableData.filter( (el: TableData) => {\r\n    if (filters?.geo?.length) {\r\n        return filters?.geo.includes(el.date);\r\n    } else {\r\n        return true;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Spin size=\"large\" spinning={loadStatus}>\r\n      {mode === 'mobile' ? <MobileTable data={data}/> : <DesktopTable data={data}/> }\r\n    </Spin>\r\n  )\r\n}\r\n","import React, { useState, FC } from 'react';\r\nimport { Layout } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport { Filters } from '../components/filters';\r\nimport { Tables } from '../components/tables';\r\nimport './main.css';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nexport const MainLayout: FC = () => {\r\n  const [loadStatus, onLoad] = useState(false);\r\n  const [filters, setFilters] = useState({});\r\n\r\n  return (\r\n    <Layout>\r\n    <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\r\n      <div className=\"logo\" />\r\n    </Header>\r\n    <Content className=\"site-layout\">\r\n      <div className=\"site-layout-background\">\r\n        <Filters onLoad={onLoad} setFilters={setFilters}/>\r\n        <br />\r\n        <Tables loadStatus={loadStatus} filters={filters}/>\r\n      </div>\r\n    </Content>\r\n    <Footer style={{ textAlign: 'center' }}>Absolut</Footer>\r\n  </Layout>\r\n  );\r\n}\r\n","import { MainLayout } from './layouts/index';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst App = () => (\r\n  <MainLayout/>\r\n)\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}